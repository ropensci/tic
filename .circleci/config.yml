## tic Circle CI template: linux-matrix-deploy
## revision date: 2022-03-01
version: 2.1
jobs:
  r-release:
    # r-release-env
    environment:
    docker:
      - image: rocker/verse
    steps:
      - checkout

      # create a unique env var for the cache. Unfortunately normal env vars
      # are not picked up by the cache, therefore this workaround is needed.
      # See https://discuss.circleci.com/t/cannot-use-circle-yml-environment-variables-in-cache-keys/10994/7
      # - run: echo "$(date '+%d-%m')-r-release" > /tmp/_tmp_file
      # - restore_cache:
      #     key: R-package-library-{{ checksum "/tmp/_tmp_file" }}

      # install deps and check pkg ---------------------------------------------
      - run:
          name: "[r-release] Install dependencies"
          command: |
            sudo apt update && sudo apt install -y libgit2-dev
            echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
            R -q -e 'install.packages("tic", repos = structure(c(ropensci = "https://ropensci.r-universe.dev", CRAN = "https://cloud.r-project.org"))); print(tic::dsl_load()); tic::prepare_all_stages()'
            R -q -e 'tic::before_install()'
            R -q -e 'tic::install()'

      - run:
          name: "[r-release] R CMD Check"
          no_output_timeout: 60m
          command: |
            R -q -e 'tic::before_script()'
            R -q -e 'tic::script()'

      # save R pkg cache -------------------------------------------------------
      - save_cache:
          key: R-package-library-{{ checksum "/tmp/_tmp_file" }}
          paths:
            - /usr/local/lib/R/site-library
  deploy:
    # r-deploy-env
    environment:
      # if you use bookdown or blogdown, replace "PKGDOWN" by the respective
      # capitalized term. This also might need to be done in tic.R
      BUILD_PKGDOWN: true
    docker:
      - image: rocker/verse
    steps:
      - checkout

      - run: echo "$(date '+%d-%m')-r-release" > /tmp/_tmp_file
      - restore_cache:
          key: R-package-library-{{ checksum "/tmp/_tmp_file" }}

      - run:
          name: Deploy
          command: |
            sudo apt update && sudo apt install -y libgit2-dev
            echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
            R -q -e 'install.packages("tic", repos = structure(c(ropensci = "https://ropensci.r-universe.dev", CRAN = "https://cloud.r-project.org"))); print(tic::dsl_load()); tic::prepare_all_stages()'
            R -q -e 'tic::before_deploy()'
            R -q -e 'tic::deploy()'
            R -q -e 'tic::after_deploy()'

  r-oldrelease:
    # r-oldrelease-env
    environment:
    docker:
      - image: rocker/verse:3.6.3
    steps:
      - checkout

      # create a unique env var for the cache. Unfortunately normal env vars
      # are not picked up by the cache, therefore this workaround is needed.
      # See https://discuss.circleci.com/t/cannot-use-circle-yml-environment-variables-in-cache-keys/10994/7
      - run: echo "$(date '+%d-%m')-r-oldrelease" > /tmp/_tmp_file
      - restore_cache:
          key: R-package-library-{{ checksum "/tmp/_tmp_file" }}

      # install deps and check pkg ---------------------------------------------
      - run:
          name: "[r-oldrelease] Install dependencies"
          command: |
            sudo apt update && sudo apt install -y libgit2-dev
            echo -e 'options(Ncpus = 4, repos = structure(c(CRAN = "https://cloud.r-project.org/")))' > $HOME/.Rprofile
            R -q -e 'install.packages("tic", repos = structure(c(ropensci = "https://ropensci.r-universe.dev", CRAN = "https://cloud.r-project.org"))); print(tic::dsl_load()); tic::prepare_all_stages()'
            R -q -e 'tic::before_install()'
            R -q -e 'tic::install()'

      - run:
          name: "[r-oldrelease] R CMD Check"
          no_output_timeout: 60m
          command: |
            R -q -e 'tic::before_script()'
            R -q -e 'tic::script()'

      # save R pkg cache -------------------------------------------------------
      # - save_cache:
      #     key: R-package-library-{{ checksum "/tmp/_tmp_file" }}
      #     paths:
      #       - /usr/local/lib/R/site-library

workflows:
  build-and-deploy:
    jobs:
      - r-release
      - r-oldrelease
      - deploy:
          requires:
            - r-release

  # CRON job daily at 4 am in the morning
  # - runs the "build" job on the master branch and builds package cache
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - master
                - main
    jobs:
      - r-release
      - r-oldrelease
