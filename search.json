[{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"running-steps-conditionally","dir":"Articles","previous_headings":"","what":"Running steps conditionally","title":"Advanced usage","text":"Steps stages can run conditionally using control workflow {tic}. Possible conditionals Environment variables build (queried ci_is_env(), ci_has_env() ci_get_env()). R Version current build (getRversion()). features build (e.g. branch name via ci_get_branch()). Common tasks use feature testing multiple R versions restriction certain tasks executed (e.g. deployment {pkgdown} site).","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"conditional-execution-use-cases","dir":"Articles","previous_headings":"Running steps conditionally","what":"Conditional execution: Use cases","title":"Advanced usage","text":"following shows example code blocks condition certain stages respective steps CI service specific branch","code":"if (ci_on_ghactions()) {   get_stage(\"<stage>\") %>%     add_step(step_...()) } if (ci_get_branch() == \"main\") {   get_stage(\"<stage>\") %>%     add_step(step_...()) }"},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"installation-of-packages","dir":"Articles","previous_headings":"","what":"Installation of packages","title":"Advanced usage","text":"Required packages installed based “Depends”/“Imports”/“Suggests” fields DESCRIPTION file. use following steps extraordinary circumstances. example can use package README.Rmd file listed within package’s DESCRIPTION file.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"github-packages","dir":"Articles","previous_headings":"Installation of packages","what":"GitHub packages","title":"Advanced usage","text":"Note underlying remotes::install_github() vectorized repo argument means can pass packages want install single function call:","code":"get_stage(\"install\") %>%   add_step(step_install_github(\"r-lib/rcmdcheck\")) add_step(step_install_github(c(\"r-lib/rcmdcheck\", \"r-lib/usethis\")))"},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"cran-packages","dir":"Articles","previous_headings":"Installation of packages","what":"CRAN packages","title":"Advanced usage","text":"","code":"get_stage(\"install\") %>%   add_step(step_install_cran(\"magick\"))"},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"ci-meta-information","dir":"Articles","previous_headings":"","what":"CI Meta-Information","title":"Advanced usage","text":"ci() function friends (ci_*) hold valuable information CI system. can used query information can utilized conditioning stages steps. example, user may wish deploy GitHub Actions using ci_on_ghactions(): using code , specified steps executed GitHub Actions. See ?ci information CI build information can extracted function.","code":"if (ci_on_ghactions()) {   get_stage(\"before_deploy\") %>%     add_step(step_setup_ssh())    get_stage(\"deploy\") %>%     add_step(step_push_deploy()) }"},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"checking-for-syntax-errors","dir":"Articles","previous_headings":"Debugging: Running {tic} locally","what":"Checking for syntax errors","title":"Advanced usage","text":"pushing GitHub triggering CI build, tic.R can validated using dsl_load(). function source tic.R check possible problems. everything ok, return (invisibly) list stages run CI build. preview first two stages:","code":"dsl_load() ✔ Loading tic stage configuration from tic.R dsl_get()[1:2] $before_install ── before_install ──────────────────────────────────────── stage ── ℹ No steps defined  $install ── install ─────────────────────────────────────────────── stage ── ▶ step_install_github(\"ropensci/rotemplate\") ▶ step_install_deps()"},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"emulating-a-ci-run-locally","dir":"Articles","previous_headings":"Debugging: Running {tic} locally","what":"Emulating a CI run locally","title":"Advanced usage","text":"tic configuration can emulated locally. First, ensure prerequisites met: might install additional packages, even fail descriptive message. , run steps defined tic.R: emulates CI run local machine executing stages corresponding steps. Note action use local system libraries CI environment. steps shown dsl_get() executed. steps executed conditioned run non-interactive environments , e.g. add_step(covr::codcov()) added macro do_package_checks().","code":"prepare_all_stages() run_all_stages() run_all_stages() ✓ Loading tic stage configuration from tic.R Running install: step_install_github(\"ropensci/rotemplate\") Skipping install of 'rotemplate' from a github remote, the SHA1 (bec3e6eb) has not changed since last install.   Use `force = TRUE` to force installation Running install: step_install_deps()"},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"circle-ci","dir":"Articles","previous_headings":"Debugging: Entering the CI build directly","what":"Circle CI","title":"Advanced usage","text":"Debugging builds Circle CI convenient. Go web interface click three dots shown screenshot. can restart build appearing dropdown menu SSH build.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/advanced.html","id":"whats-not-covered-yet","dir":"Articles","previous_headings":"","what":"What’s not covered yet?","title":"Advanced usage","text":"SystemRequirements: {tic} yet capable automatically determining system requirements specified DESCRIPTION files R package. Future plans include automatically provide suggestions like","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/build-lifecycle.html","id":"stages","dir":"Articles","previous_headings":"","what":"Stages","title":"Build lifecycle","text":"CI services run builds stages. Stages usually ordered follows:  after_xxx stages executed conditionally corresponding xxx stage. after_deploy stage run deploy stage run . after_success stage run script stage executed successfully, .e. without error; otherwise after_failure run instead. tic also relies “stage” based approach. action run certain stage defined tic.R. steps specified CI-agnostic way using R syntax. majority template code consists glue code meant edited. nutshell, workflow follows: CI YAML -> tic.R -> commands/steps execute important points: R code declared tic.R meant run manually. also trigger CI build. commands just define workflow CI build. workflow can loaded using dsl_load(), however run commands defined. testing purposes, stages steps defined tic.R can executed calling run_all_stages(). emulates CI build local system. See Troubleshooting: Running tic locally information.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/build-lifecycle.html","id":"accessing-a-single-stage","dir":"Articles","previous_headings":"Stages","what":"Accessing a single stage","title":"Build lifecycle","text":"steps executed stage specified tic.R. stage executed calling respective tic function; example stage “deploy” tic::deploy(). happens CI YAML templates take closer look . functions source tic.R collect steps belong stage executing get_stage(\"<stage name>\") (e.g. get_stage(\"deploy\") “deploy” stage”). , remember order stages fixed (see “Stages” section), matter order declare stages tic.R.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/build-lifecycle.html","id":"the-before_install-install-stages","dir":"Articles","previous_headings":"Stages > Details of stages","what":"The \"before_install\" & \"install\" stages","title":"Build lifecycle","text":"important stage {tic} \"before_install\" stage. , {tic} gets installed runs prepare_all_stages(). function ensures subsequent steps can executed. hood prepare() method steps declared tic.R called. example, prepare() method step_rcmdcheck() step ensures dependencies R package get installed calling remotes::install_deps(). packages stored “cache” CI service (need installed every CI build) installed preparation.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/build-lifecycle.html","id":"the-script-stage","dir":"Articles","previous_headings":"Stages > Details of stages","what":"The \"script\" stage","title":"Build lifecycle","text":"\"script\" stage responsible executing important tasks CI run: Typically, runs R CMD check package builds site blogdown site. arriving stage, dependencies successful run already installed.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/build-lifecycle.html","id":"the-deploy-stage","dir":"Articles","previous_headings":"Stages > Details of stages","what":"The \"deploy\" stage","title":"Build lifecycle","text":"stage initiates deployment (e.g., setting deployment keys) executes . want automatically build {pkgdown} site, can . See article deployment information.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/build-lifecycle.html","id":"steps","dir":"Articles","previous_headings":"","what":"Steps","title":"Build lifecycle","text":"Steps commands executed stage. tic uses pipe operator add_step() function chain steps tic.R, example code example step_build_pkgdown() added \"deploy\" stage subsequently run stage. steps run stage just piped add_step(step_build_pkgdown()). summary, steps usually defined using two nested commands: add_step() corresponding step, step_build_pkgdown(). list shows rough grouping steps default stages:","code":"get_stage(\"deploy\") %>%   add_step(step_build_pkgdown())"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-client-packages.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"tic & CI Client Packages - An Overview","text":"setup work needs done specific CI systems handled respective R client packages {circle}. enable repo CI system ensure deployment permissions granted. everything set , rest work goes {tic}. Creation CI YAML templates. steps going run. Deployment: Yes/essence, tic::use_tic() wrapper creating CI YAML templates setting deployment CI systems powered client packages.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-client-packages.html","id":"ci-client-packages","dir":"Articles","previous_headings":"","what":"CI Client Packages","title":"tic & CI Client Packages - An Overview","text":"Currently, following CI client packages exist: {circle} client package travis archived November 2020. Appveyor r-appveyor Kirill Müller. project makes possible first place run R checks Appveyor provide access Appveyor API used {tic} currently. Also, come automation deployment setup. Appveyor support removed {tic} December 2020 due strong focus GitHub Actions. GitHub Actions {ghactions} Max Held comes functions helping set YAML templates convenience. provide API access used {tic} currently.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"github-actions","dir":"Articles","previous_headings":"","what":"GitHub Actions","title":"Implementation Details of CI Providers","text":"{tic} supports running builds GitHub Actions major platforms (Linux, macOS, Windows). upstream support R language developed Jim Hester r-lib/actions. repo also stores usage examples differ {tic} approach following points: {tic} makes use ccache compiler caching enabling faster source installation packages. ccache directory cached build week. {tic} installs packages source Linux default use package binaries. {tic} caches complete R library direct packages dependencies (actions via remotes::dev_package_deps(dependencies = TRUE)). cache built per day. Making use binaries can speed build times substantially. can especially attractive packages many dependencies dependencies take long time install. However, binaries oft run problems package needs linking system libraries. prominent example {rJava}. binary built version user running system, everything work. However, often enough different version system library installed R packages needs installed source successfully link . case {rJava}, one needs add call R CMD javareconf macOS runners add call sudo R CMD javareconf Linux runners","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"macos-toolchain","dir":"Articles","previous_headings":"GitHub Actions","what":"macOS toolchain","title":"Implementation Details of CI Providers","text":"macOS bit tricky comes source installation packages. default clang used instead gcc (Linux) former default macOS. However, default clang macOS come openMP support. Therefore, R macOS core devs CRAN currently use custom openMP-enabled (old) version clang build CRAN package binaries. {tic} reflect installing clang7 clang8 respective R version build initialization “ccache” stages.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"rjava","dir":"Articles","previous_headings":"GitHub Actions","what":"rJava","title":"Implementation Details of CI Providers","text":"Java support required, add following macOS runners: Linux, add sudo R CMD javareconf stage “Linux Prepare”. currently support Java Windows.","code":"- name: \"[macOS] rJava\"         if: runner.os == 'macOS'         run: |           R CMD javareconf           Rscript -e \"install.packages('rJava', type = 'source')\""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"ccache","dir":"Articles","previous_headings":"GitHub Actions","what":"ccache","title":"Implementation Details of CI Providers","text":"huge dependency chain compiling many packages source (especially R-devel), ccache can help speed package installation. recommended dependency installation time higher 30 minutes. ccache cache build, compilation complete much faster. ccache cache invalidated month. means package installation can make use cache 29/30 days month. downside ccache needs installed configured. happens every run, .e. also runs ccache used package cache already exists. Installation can take 1 min, depending platform. Note ccache won’t used Windows since binaries used platform. can take following blocks add/replace tic.yml needed. essential part prefix compiler settings ~/.R/Makevars ccache. addition also need set following env variables:","code":"- name: \"[Custom] [Cache] Prepare weekly timestamp for cache\"         if: runner.os != 'Windows'         id: datew         run: echo \"date=$(date '+%d-%m')\" >> $GITHUB_OUTPUT         - name: \"[Custom] [Cache] Cache ccache\"         if: runner.os != 'Windows'         uses: pat-s/always-upload-cache@v2.0.0         with:           path: ${{ env.CCACHE_DIR}}           key: ${{ runner.os }}-r-${{ matrix.config.r }}-ccache-${{steps.datew.outputs.datew}}           restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-ccache-${{steps.datew.outputs.datew}}        # install ccache and write config file       # mirror the setup described in https://github.com/rmacoslib/r-macos-rtools       - name: \"[Custom] [macOS] ccache\"         if: runner.os == 'macOS' && matrix.config.r == 'devel'         run: |           brew install ccache           # set compiler flags           mkdir -p ~/.R && echo -e 'CC=ccache clang\\nCPP=ccache clang\\nCXX=ccache clang++\\nCXX11=ccache clang++\\nCXX14=ccache clang++\\nCXX17=ccache clang++\\nF77=ccache /usr/local/gfortran/bin/gfortran\\nFC=ccache /usr/local/gfortran/bin/gfortran' > $HOME/.R/Makevars        # install ccache and write config file       - name: \"[Custom] [Linux] ccache\"         if: runner.os == 'Linux'         run: |           sudo apt install ccache libcurl4-openssl-dev           mkdir -p ~/.R && echo -e 'CC=ccache gcc -std=gnu99\\nCXX=ccache g++\\nFC=ccache gfortran\\nF77=ccache gfortran' > $HOME/.R/Makevars # setting some ccache options CCACHE_BASEDIR: ${{ GITHUB.WORKSPACE }} CCACHE_DIR: ${{ GITHUB.WORKSPACE }}/.ccache CCACHE_NOHASHDIR: true CCACHE_SLOPPINESS: include_file_ctime"},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"macos","dir":"Articles","previous_headings":"GitHub Actions > Spatial libraries (gdal, proj, geos)","what":"macOS","title":"Implementation Details of CI Providers","text":"homebrew-core formulas gdal, geos proj. need spatial formulas, look osgeo4mac tap. Note however, installing formulas latter, conflict ones homebrew-core. Either install formulas osgeo4mac none. Also one needs remove gfortran build installed actions/setup-r. due brew installing gcc installation gdal. gcc comes gfortran included brew tries link gfortran fail since already local instance gfortran. Hence, instance needs removed brew link step error stop build. spatial packages like {sf} {terra} get updated, takes time binary available. mean time, must installed source. fails time now due linking issue sqlite jpeg, see https://github.com/r-spatial/sf/issues/1894 information. fix , one can add following custom block tic.yml: ’s full block, used {mlr3spatiotempcv}:","code":"# conflicts with gfortran from r-lib/actions when linking gcc rm '/usr/local/bin/gfortran' brew install gdal proj geos mkdir ~/.R && echo -e \"CPPFLAGS += -L/opt/homebrew/opt/jpeg/lib\" >> ~/.R/Makevars - name: \"[Custom block] [macOS] Install spatial libraries\"         if: runner.os == 'macOS'         run: |           rm '/usr/local/bin/gfortran'           brew install ccache gdal geos proj udunits jpeg sqlite           brew install xquartz           mkdir ~/.R && echo -e \"CPPFLAGS += -L/usr/local/opt/jpeg/lib\" >> ~/.R/Makevars"},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"linux","dir":"Articles","previous_headings":"GitHub Actions > Spatial libraries (gdal, proj, geos)","what":"Linux","title":"Implementation Details of CI Providers","text":"Linux, add libgdal-dev libproj-dev libgeos-dev apt install call “Linux Prepare” stage.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"known-issues","dir":"Articles","previous_headings":"GitHub Actions","what":"Known issues","title":"Implementation Details of CI Providers","text":"[Windows] Installing {tinytex} LaTeX availability complete","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/ci-providers.html","id":"circle-ci","dir":"Articles","previous_headings":"","what":"Circle CI","title":"Implementation Details of CI Providers","text":"WIP","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/custom-steps.html","id":"the-ticstep-class","dir":"Articles","previous_headings":"","what":"The TicStep class","title":"Developer info: Writing custom steps","text":"step subclass TicStep class. step_... functions {tic} forwarded new() methods corresponding R6 class objects (initialize() member functions). recommend following pattern custom steps. TicStep class implements public methods check(), prepare(), run(). methods must callable without arguments. means need override methods need; don’t need check() prepare() method can leave . following sections describe methods show examples.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/custom-steps.html","id":"the-prepare-method","dir":"Articles","previous_headings":"The TicStep class","what":"The prepare() method","title":"Developer info: Writing custom steps","text":"method called prepare_all_stages(). intended run before_script phase CI run. method install dependent packages step requires, can cached CI system. also may include preparation code . example step_rcmdcheck verifies R packages rcmdcheck remotes installed:","code":"RCMDcheck$public_methods$prepare"},{"path":"https://docs.ropensci.org/tic/dev/articles/custom-steps.html","id":"the-run-method","dir":"Articles","previous_headings":"The TicStep class","what":"The run() method","title":"Developer info: Writing custom steps","text":"method executes step. step added stage, run() called stage executed. example, run() function class RCMDcheck looks follows:","code":"RCMDcheck$public_methods$run"},{"path":"https://docs.ropensci.org/tic/dev/articles/custom-steps.html","id":"the-check-method","dir":"Articles","previous_headings":"The TicStep class","what":"The check() method","title":"Developer info: Writing custom steps","text":"method checks whether step actually run. returns logical scalar. step_write_text_file() function example step following implementation check() method:","code":"WriteTextFile$public_methods$check"},{"path":"https://docs.ropensci.org/tic/dev/articles/custom-steps.html","id":"a-minimal-example","dir":"Articles","previous_headings":"","what":"A minimal example","title":"Developer info: Writing custom steps","text":"can take look pull request implements new step. minimalist version “Hello World” example step. class contains run() method nothing printing “Hello World” console. initialized calling step_hello_world() creates new instance class.","code":"HelloWorld <- R6Class(   \"HelloWorld\",   inherit = TicStep,   public = list(     run = function() {       print(\"Hello, world!\")     }   ) )  #' Step: Hello, world! #' #' The simplest step possible: prints \"Hello, world!\" to the console when run, does not require #' any preparation. #' This step may be useful to test a \\pkg{tic} setup or as a starting point when implementing a #' custom step. #' #' @family steps #' @export step_hello_world <- function() {   HelloWorld$new() }"},{"path":"https://docs.ropensci.org/tic/dev/articles/custom-steps.html","id":"further-information-on-the-r6-class-system","dir":"Articles","previous_headings":"","what":"Further information on the R6 class system","title":"Developer info: Writing custom steps","text":"unfamiliar R6 classes, short guidance arguments passed along: Consider step_rcmdcheck() function (link source): , new instance defined R6 class RCMDcheck initiated RCMDcheck$new(). arguments step_rcmdcheck() passed initialize() function R6 class. , arguments assigned “private” members (e.g. private$args). Next, private members used run() function carries actual work.","code":"RCMDcheck <- R6Class( # nolint   \"RCMDcheck\",   inherit = TicStep,   public = list(     initialize = function(warnings_are_errors = NULL, notes_are_errors = NULL,                           args = c(\"--no-manual\", \"--as-cran\"),                           build_args = \"--force\", error_on = \"warning\",                           repos = repo_default(), timeout = Inf,                           check_dir = NULL) {       if (!is.null(notes_are_errors)) {         warning_once(           '`notes_are_errors` is deprecated, please use `error_on = \"note\"`'         )         if (notes_are_errors) {           error_on <- \"note\"         }       } else if (!is.null(warnings_are_errors)) {         warning_once(           \"`warnings_are_errors` is deprecated, \",           'please use `error_on = \"warning\"`'         )         if (warnings_are_errors) {           error_on <- \"warning\"         }       }       private$args <- args       private$build_args <- build_args       private$error_on <- error_on       private$repos <- repos       private$timeout <- timeout       private$check_dir <- check_dir        super$initialize()     },     run = function() {       # Don't include vignettes if --no-build-vignettes is included       if (\"--no-build-vignettes\" %in% private$args) {         cat(\"^vignettes$\\n\", file = \".Rbuildignore\", append = TRUE)       }        withr::with_envvar(         c(           # Avoid large version components           \"_R_CHECK_CRAN_INCOMING_\" = \"FALSE\",           # Don't check system clocks (because the API used there is flaky)           \"_R_CHECK_SYSTEM_CLOCK_\" = \"FALSE\",           # Don't force suggests           \"_R_CHECK_FORCE_SUGGESTS_\" = \"FALSE\",           # Work around missing qpdf executable           \"R_QPDF\" = if (Sys.which(\"qpdf\") == \"\") \"true\"         ),         res <- rcmdcheck::rcmdcheck(           args = private$args, build_args = private$build_args,           error_on = \"never\",           repos = private$repos,           timeout = private$timeout,           check_dir = private$check_dir         )       )        print(res)       if (length(res$errors) > 0) {         stopc(\"Errors found in rcmdcheck::rcmdcheck().\")       }       if (private$error_on %in% c(\"warning\", \"note\") && length(res$warnings) > 0) {         stopc(           \"Warnings found in rcmdcheck::rcmdcheck(), \",           'and `errors_on = \"warning\"` is set.'         )       }       if (private$error_on == \"note\" && length(res$notes) > 0) {         stopc(           \"Notes found in rcmdcheck::rcmdcheck(), \",           'and `errors_on = \"note\"` is set.'         )       }     },     prepare = function() {       verify_install(\"rcmdcheck\")       super$prepare()     }   ),   private = list(     args = NULL,     build_args = NULL,     error_on = NULL,     repos = NULL,     timeout = NULL,     check_dir = NULL   ) )"},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Deployment","text":"{tic} uses CI client packages ({circle}) setting deployment CI systems.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"circle-ci","dir":"Articles","previous_headings":"Introduction","what":"Circle CI","title":"Deployment","text":"Circle CI, setting deployment convenient need create SSH key pair deployment. calling circle::use_circle_deploy() directly (indirectly via tic::use_tic()), called “user-key” created stored Circle CI repo. key makes possible deploy Circle CI builds GitHub repo. extra deploy key need stored GitHub repo.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"github-actions","dir":"Articles","previous_headings":"Introduction","what":"GitHub Actions","title":"Deployment","text":"GitHub Actions offers multiple options related deployment: Deployment related actions GitHub marketplace Supplying DEPLOY_PAT secret r-lib/actions suggests Using SSH key pair private key stored “secret” repo public key “Deploy key” ({tic} default) reflect successful deployment repo checks, actions GitHub marketplace help. actual deployment recommend use SSH key pair. SSH key can easily created, safe use browsing “Deploy key” section repo, one can directly see deployment granted CI service repository. simplify creation SSH key pair deployment adding keys appropriate places, {tic} comes little helper function use_ghactions_deploy(). use function, need GITHUB_PAT public repo scope defined .Renviron. usethis::create_github_token() helps setting one haven’t done already.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"updating-the-deployment-status","dir":"Articles","previous_headings":"Introduction > GitHub Actions","what":"Updating the deployment status","title":"Deployment","text":"update deployment status “environments” menu (next “release” “branches”) conditionally outcome “Deployment” stage, one can use chrnorm/deployment-status. Add following “Deploy” stage: part “Deploy” stage:","code":"- uses: chrnorm/deployment-action@v1.1.1         name: Create GitHub deployment         id: deployment         with:           token: \"${{ github.token }}\"           environment: production - name: Update deployment status (success)         if: success()         uses: chrnorm/deployment-status@releases/v1         with:           token: \"${{ github.token }}\"           target-url: http://my-app-url.com           state: \"success\"           deployment_id: ${{ steps.deployment.outputs.deployment_id }}        - name: Update deployment status (failure)         if: failure()         uses: chrnorm/deployment-status@releases/v1         with:           token: \"${{ github.token }}\"           target-url: http://my-app-url.com           state: \"failure\"           deployment_id: ${{ steps.deployment.outputs.deployment_id }}"},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"pkgdown-deployment","dir":"Articles","previous_headings":"","what":"{pkgdown} deployment","title":"Deployment","text":"{pkgdown} R package builds documentation wrapper-site R package. collects vignettes, function references metadata information package presents eye-appealing HTML version. become quasi-standard provide {pkgdown} site R package. However, tedious update {pkgdown} site manually every commit, check whether something changed commit changes. {tic} comes ability automate process. following example shows {tic} deploys {pkgdown} site GitHub Actions. Remember can freely choose favorite provider task. tic.yml file “before_deploy” “deploy” stages redirected {tic}. “before_deploy” stage, {tic} following: Calls step_setup_ssh() environment variable \"BUILD_PKGDOWN\" set CI build. step sets SSH key previously added GitHub via tic::use_ghactions_deploy(). Argument private_key_name can ignored long custom private key name used tic::use_ghactions_deploy(). , supply via private_key_name argument do_pkgdown(). backward compatibility, deprecated default \"id_rsa\" supported box. Calls add_step(step_build_pkgdown()) add_step(step_push_deploy()) “deploy” stage. step_build_pkgdown() build {pkgdown} site afterwards (note pipe operator chaining commands), step_push_deploy() takes care pushing results repo. default site pushed gh-pages branch repo, keeping history.","code":"- name: \"[Stage] Before Deploy\"   run: |     Rscript -e \"tic::before_deploy()\" if (ci_on_ghactions()) {   get_stage(\"before_deploy\") %>%     add_step(step_setup_ssh()) } get_stage(\"deploy\") %>%   add_step(step_build_pkgdown()) %>%   add_step(step_push_deploy())"},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"deploying-to-docs-default-branch-or-gh-pages-branch","dir":"Articles","previous_headings":"{pkgdown} deployment","what":"Deploying to docs/ (default branch) or gh-pages branch","title":"Deployment","text":"default deployment pushed gh-pages branch. following advantages: cluttering commit history default branch Everything “just works” silently background","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"default-branch-deployment","dir":"Articles","previous_headings":"{pkgdown} deployment > Deploying to docs/ (default branch) or gh-pages branch","what":"Default branch deployment","title":"Deployment","text":"Deploying docs/ directory default branch following advantages: Per-branch versions {pkgdown} site (desired) Per-branch versions enable possibility preview pull requests via https://www.netlify.com/ disadvantage default branch cluttered automatic commits push changes {pkgdown} site default branch.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"orphaning-the-gh-pages-branch","dir":"Articles","previous_headings":"{pkgdown} deployment > Deploying to docs/ (default branch) or gh-pages branch","what":"Orphaning the gh-pages branch","title":"Deployment","text":"default, changes {pkgdown} site added incremental commits gh-pages branch. useful keep history past versions enable release dev version site. feature, set _pkgdown.yml file. See ?pkgdown::build_site() information. want one version {pkgdown} site fill repo many commits gh-pages branch, can use do_pkgdown(orphan = TRUE). wipe commits branch every CI run one commit corresponding latest version pkgdown site.","code":"development:   mode: auto"},{"path":"https://docs.ropensci.org/tic/dev/articles/deployment.html","id":"committing-single-files","dir":"Articles","previous_headings":"","what":"Committing single files","title":"Deployment","text":"step_push_deploy() step ability restrict files committed pushed. can useful conditionally pushing documentation files like NEWS man/ NAMESPACE automatically created CI run. following example, files created/updated calling devtools::document(). commit_paths argument step_push_deploy() decides files committed pushed: Applying idea depends overall R package development strategy: Commit files like /man/ NAMESPACE directly let created CI run?","code":"get_stage(\"before_deploy\") %>%   add_step(step_setup_ssh())  get_stage(\"deploy\") %>%   add_code_step(devtools::document(roclets = c(\"rd\", \"collate\", \"namespace\"))) %>%   add_step(step_push_deploy(commit_paths = c(\"NAMESPACE\", \"man/*\")))"},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/faq.html","id":"q-auth-1","dir":"Articles","previous_headings":"Authentication","what":"Q-Auth-1","title":"FAQ","text":"getting error using circle::use_circle_deploy() tic::use_ghactions_deploy(). Answer cases related API authentication issues. Ensure following points met: Circle CI, install respective GitHub App GitHub Marketplace. Ensure set respective API keys problematic provider .Renviron file. Consult help pages respective use_*_deploy() function help. GitHub Actions: GITHUB_PAT “public_repo” scopes. Circle CI: Env var R_CIRCLE.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/faq.html","id":"q-gha-1","dir":"Articles","previous_headings":"GitHub Actions","what":"Q-GHA-1","title":"FAQ","text":"{tic} different r-lib/actions ? Answer {tic} uses r-lib/actions base install R first place. However detail, {tic} following things differently aim enhance CI experience: Caching: {tic} caches whole R library rather direct dependencies package. advantage packages required side actions ({pkgdown} deployment, README updates) also cached. ccache: {tic} comes compiler cache source installations packages default, speeding repeated source installation highly. compiler cache directory (.ccache) also cached (week). Example use case: installed {Rcpp} source dependency package stored cache {Rcpp} now updates two days later, reinstallation make use compiler cache install {Rcpp} instantly rather recompiling C code . Number CPUs: {tic} uses 4 CPUs default instead 1 r-lib/actions . speeds package installation lot. 4 CPUs max GitHub Actions runners 2 hyperthreading cores available. Use SSH deployment keys: set via tic::use_ghactions_deploy(), deployment approach makes possible push file repository branch remote. deployment approaches often limit push gh-pages branch similar.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/faq.html","id":"q-other-1","dir":"Articles","previous_headings":"Other","what":"Q-Other-1","title":"FAQ","text":"possible update CI YAML templates installed {tic} upstream changes? Answer Yes! look “Updating Templates” information.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/faq.html","id":"q-other-2","dir":"Articles","previous_headings":"Other","what":"Q-Other-2","title":"FAQ","text":"one using {tic}? Answer can see many people use {tic.R} GitHub via query: https://github.com/search?p=5&q=filename%3Atic.R&type=Code","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/faq.html","id":"q-other-3","dir":"Articles","previous_headings":"Other","what":"Q-Other-3","title":"FAQ","text":"Package {rgl} fails install either “configure: error: X11 found required, configure aborted.” “error: X11 found; XQuartz (www.xquartz.org) required run rgl.” Answer first one usually caused missing installation XQuartz macOS. Add brew install xquartz runner. second error requires set DISPLAY env var mimic non-headless state. Add export DISPLAY=:99 stage {rgl} installed. warning message loading {rgl} suppressed, either env var RGL_USE_NULL = TRUE can set R option options(rgl.useNull = TRUE).","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/features.html","id":"simplified-deployment","dir":"Articles","previous_headings":"","what":"Simplified Deployment","title":"The features of tic","text":"CI services can used automatically build deploy files. means services can push certain files created build repositories (GitHub, GitLab, etc.). Possible use cases : Changed site contents {pkgdown} site Updated .Rd files package (calling devtools::document() ) Automated generation test summary page package {tic} used deployment, preparatory work required: Setting SSH key pair deployment (differs across CI services). Granting permission push repo GitHub. calling use_tic(), streamlined preparation process run, utilizing R Client packages respective CI service hood. step needed per repository. detailed information deployment {tic}, look Deployment vignette.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/features.html","id":"support-for-various-r-projects","dir":"Articles","previous_headings":"","what":"Support for various R projects","title":"The features of tic","text":"{tic} developed aim simplify R package development using CI services also support R project types: bookdown blogdown drat website deployment figshare deployment project types requires standardized structure. {tic} detects structure (assuming user already set ) adds CI templates tailored towards specific project type repository calling use_tic(). See Example projects section “Get started” article list supported project types including links minimal example repositories.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/features.html","id":"ci-agnostic-workflows","dir":"Articles","previous_headings":"","what":"CI-Agnostic workflows","title":"The features of tic","text":"“CI-Agnostic” mean need ? historic reasons, R community first started Travis CI implement easy way R package checking. build script R community maintained. Theoretically, R run CI system. Travis CI one bunch providers offer (free) CI solutions. CI provider way user write YAML file successfully talk service. setup file controls done run. give example different control files can , take look two examples Circle CI Github Actions. list way differences - ’s exactly point {tic} comes ! Rather dealing CI differences, {tic} enables specification complete workflow external R script file tic.R. calls listed tic.R work way every CI service supported {tic}. can emulate stages steps locally calling run_all_stages(). independent changes made upstream runners specific CI system. tic.R workflow usually shorter easier parse provider-specific YAML configuration file builds macros. instead learning specify specific tasks different CI platforms, apply R commands work CI systems.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/features.html","id":"enhanced-r-package-checking","dir":"Articles","previous_headings":"","what":"Enhanced R package checking","title":"The features of tic","text":"R package developer calling devtools::check() common task. Usually CI workers run R CMD check <package> check R package. {tic} instead makes use {rcmdcheck}, wrapper around R CMD build R CMD check developed Gabor Csardi. {rcmdcheck} comes several enhancements: Coloring important steps, simplifying readability log. Enhanced extended tracebacks errors, especially errors tests. whole check process returned R object, making easier inspect errors/warnings. Especially extended log printing errors CI service huge advantage - often enough, CI services cut console log output early, often omitting important information error.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/features.html","id":"caching-of-packages","dir":"Articles","previous_headings":"","what":"Caching of packages","title":"The features of tic","text":"using {tic}, dependencies (ones package plus ones stages CI build) installed \"before_install\" \"install\" stage. advantage packages added cache (even just needed deployment), speeding subsequent builds substantially. information complete workflow can found Build lifecyle vignette.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/features.html","id":"easier-troubleshooting","dir":"Articles","previous_headings":"","what":"Easier troubleshooting","title":"The features of tic","text":"{tic} comes ability emulate CI run locally debug problems config file calling dsl_load() locally.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"prerequisites","dir":"Articles","previous_headings":"","what":"Prerequisites","title":"Getting started with CI for R","text":"Continuous Integration (CI) huge field software development. lot resources try explain can need (usually particular company/service best). just getting started software development git based project work might think: “Ah don’t need overhead, fine X Y manually project. overhead learning next additional”tool” worth . Reading vignettes package help understand {tic} simplify specifically R language. However, lot advanced information vignettes might bit overwhelming first just getting started. Therefore explain important terms first give kickstart: One build job (possibly among many others) operating system executes certain commands specified YAML config file. file written YAML language telling runner push repository. Specification many runners started specification (operating system, custom environment variables, etc.) company offers ready--use virtual images runners started certain action (.e.g Circle CI). However, code hosting sites like GitHub GitLab also CI integration meanwhile. CI builds just perform specific checks package/project, can also used (re-)build certain files every run. appropriate permissions files can pushed repository via git without need take manual actions user. can save lot time commonly used ensure documentation always --date. R packages interface command line API CI providers simplify execution certain tasks (scraping build logs, enabling repos, etc.), e.g. {circle}. Badges README repository showing current build status project: last build fail finish successfully? “DSL” stands “domain-specific language” essentially means implementation general concept specific programming language.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"initializationsetup","dir":"Articles","previous_headings":"","what":"Initialization/Setup","title":"Getting started with CI for R","text":"easiest way use {tic} CI services call tic::use_tic(). initialize setup wizard guide possibilities offered CI providers {tic}. Several yes/questions need answered. Based replies ’ll select specific templates. Besides question CI system want use, ’ll asked want Deploy builds GitHub (e.g. building {pkgdown} site) Test package multiple R versions Last, ’ll add tic.R file project root. , project ready continuous integration. next push GitHub create build Circle CI. See Troubleshooting section case anything doesn’t work expected.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"quickstart","dir":"Articles","previous_headings":"Initialization/Setup","what":"Quickstart","title":"Getting started with CI for R","text":"new user, run already use {tic} want configure new CI provider, open try new things, Circle CI comes advantages might simplify CI experience. However, providers come pros cons provide exhaustive list comparing providers . See CI Client Packages article detailed information {tic} CI client packages work together.","code":"tic::use_tic() ## Circle CI circle::use_circle_deploy() # (optional for deployment) tic::use_circle_yml(<option here>)"},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"the-role-of-the-tic-r-file","dir":"Articles","previous_headings":"","what":"The role of the tic.R file","title":"Getting started with CI for R","text":"called tic::use_tic() find .circleci/config.yml .github/workflows tic.R file repo, depending choices made use_tic(). latter always present main CI config file providers now . Usually need touch YAML files anymore. build customization done tic.R applies providers. information build lifecycle general, check Build lifecycle article. basic tic.R template looks follows: tic.R file declarative nature: consist “stages”, “steps” “macro” functions (see ). functions effect specified tic.R used standalone run (simulated) CI run following certain order. run plain R code within build, encapsulate within add_code_step(<code>) add certain build stage. See Build Lifecycle article detailed info .","code":"do_package_checks()  if (ci_on_ghactions()) {   do_pkgdown() }"},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"macros","dir":"Articles","previous_headings":"The role of the tic.R file","what":"Macros","title":"Getting started with CI for R","text":"{tic} builds “macro” idea. Macros essentially wrappers sequence steps often used tasks CI system: Checking package (R CMD check) Building deploying pkgdown site Build deploy bookdown project can distinguished functions do_ prefix. following ones currently implemented: good use case macro, let us know opening issue.","code":"list_macros() #> [1] \"do_blogdown\"       \"do_bookdown\"       \"do_drat\"           #> [4] \"do_package_checks\" \"do_pkgdown\"        \"do_readme_rmd\""},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"do_package_checks","dir":"Articles","previous_headings":"The role of the tic.R file > Macros","what":"do_package_checks()","title":"Getting started with CI for R","text":"do_package_checks() adds essential steps various stages CI run. importantly, adds step_rcmdcheck() “script” stage. step performs check R package. Afterwards, code coverage checked using covr::codecov(). See ?do_package_checks() information.","code":"do_package_checks() # step_install_deps() in the \"install\" stage, using the repos argument. # # step_rcmdcheck() in the \"script\" stage, using the warnings_are_errors, #  notes_are_errors, args, and build_args arguments. # # A call to covr::codecov() in the \"after_success\" stage (only if the codecov flag is set)"},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"do_pkgdown","dir":"Articles","previous_headings":"The role of the tic.R file > Macros","what":"do_pkgdown()","title":"Getting started with CI for R","text":"macro default template do_pkgdown(). do_pkgdown() adds five steps build process: default currently happens GitHub Actions, ci_on_ghactions() used condition. ? Building pkgdown site multiple CI services added benefit might even cause problems due race conditions deployment. ci_on_ghactions() can replaced one sibling functions like ci_on_circle().","code":"if (ci_on_ghactions()) {   do_pkgdown() } # step_install_deps() in the \"install\" stage, using the repos argument. # # step_setup_ssh() in the \"before_deploy\" to setup the upcoming deployment (if deploy is set), # # step_setup_push_deploy() in the \"before_deploy\" stage (if deploy is set), # # step_build_pkgdown() in the \"deploy\" stage, forwarding all ... arguments. # # step_do_push_deploy() in the \"deploy\" stage."},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"do_readme_rmd","dir":"Articles","previous_headings":"The role of the tic.R file > Macros","what":"do_readme_rmd()","title":"Getting started with CI for R","text":"projects rely dynamic README.Rmd file contains R code. Sometimes output README’s change time code driving changes due updates. always stay --date without needing take manual action, can use macro. render README.Rmd deploy README.md default repo branch. deployment made rendered output differs one stored upstream. macro requires set deployment selected provider beforehand.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"blogdown","dir":"Articles","previous_headings":"The role of the tic.R file > Macros","what":"Blogdown","title":"Getting started with CI for R","text":"show case, explain “blogdown” project detail. blogdown R package publishing websites. hood, uses framework Hugo gets installed respective tic.R template “install” section: Next website built deployed. blogdown::build_site() function websites equivalent pkgdown::build_site() R packages. Steps stages differ projects (e.g. “blogdown” website “package”). {tic} smart enough detect project automatically calling tic::use_tic() add correct template. Note: Currently, publishing https://figshare.com/ doesn’t work. Also, publishing https://zenodo.org/ work progress.","code":"get_stage(\"install\") %>%   add_code_step(blogdown::install_hugo()) get_stage(\"deploy\") %>%   add_code_step(blogdown::build_site()) %>%   add_step(step_push_deploy())"},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"tic-projects-from-the-community","dir":"Articles","previous_headings":"The role of the tic.R file","what":"{tic} projects from the community","title":"Getting started with CI for R","text":"templates provide {tic} minimal working examples. querying tic.R GitHub one can see else uses {tic} CI runs: https://github.com/search?p=5&q=filename%3Atic.R&type=Code","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/tic.html","id":"still-got-questions","dir":"Articles","previous_headings":"The role of the tic.R file","what":"Still got questions?","title":"Getting started with CI for R","text":"look list articles wrote shine light parts {tic} covers. face issues, make sure also check FAQ vignette browse issue tracker.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/articles/updating.html","id":"custom-and-custom-deploy-templates","dir":"Articles","previous_headings":"Deviating from the templates","what":"custom and custom-deploy templates","title":"Updating","text":"using custom custom-deploy deploy template (e.g. via tic::use_ghactions_yml(\"custom\")), tic::update_yml() ignore matrix part templates. gives ability specify runner config still profiting template updates.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/updating.html","id":"the-custom-header-tag","dir":"Articles","previous_headings":"Deviating from the templates","what":"The # [Custom header] tag","title":"Updating","text":"want go even custom, can add # [Custom header] right ## revision date line. tells update_yml() ignore complete header including env: key completely. can useful want insert service: block env: strategy specifying custom build triggers :.","code":""},{"path":"https://docs.ropensci.org/tic/dev/articles/updating.html","id":"examples","dir":"Articles","previous_headings":"","what":"Examples","title":"Updating","text":"examples custom user blocks custom env vars: GitHub Actions Custom header Runner specific environment variable Environment variable Block Circle CI Environment variable Block","code":"## tic GitHub Actions template: linux ## revision date: 2022-08-28 # [Custom header] on:   workflow_dispatch:  [...] matrix:   config:     # use a different tic template type if you do not want to build on all listed platforms     - { os: windows-latest, r: \"release\" }     # [Custom matrix env var] test     - { os: macOS-latest, r: \"release\", pkgdown: \"true\", test: \"true\" }     - { os: ubuntu-latest, r: \"devel\" }     - { os: ubuntu-latest, r: \"release\" } env:   # [Custom env]   R_MAX_NUM_DLLS: 999 - name: \"[Custom block] [macOS] xquartz\"   if: runner.os == 'macOS'   run: |     brew install xquartz environment:   # [Custom env] env var 2   test2: \"true\" - run:     name: \"[Custom block] test2\"     command: |       echo 'test2'"},{"path":"https://docs.ropensci.org/tic/dev/articles/updating.html","id":"automating-the-update-process","dir":"Articles","previous_headings":"","what":"Automating the update process","title":"Updating","text":"Updating {tic} YAML files can automated . provide GitHub Actions Workflow named update-tic.yml can used together tic::update_yml() update templates whenever newer upstream versions available. workflow create branch, update files commit even open pull request. Just put workflow next tic.yml file within .github/workflows/ silently job. default run night CRON job. runs day executed push pull request events. underlying update_yml() match files starting \"tic\". Hence can add multiple YAML files {tic} support, e.g. \"tic.yml\" \"tic-db.yml\". Unfortunately, GitHub allow GHA workflow files updated pushed automatic approaches. make work, user needs pass GitHub Personal Access Token (PAT) “workflow” scopes. PAT need added “secret” repo can used within build. gha_add_secret() helps automate process. linked workflow searches default PAT secret named TIC_UPDATE updating tic.yml.","code":""},{"path":"https://docs.ropensci.org/tic/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick Schratz. Author, maintainer. Kirill Müller. Author. Mika Braginsky. Author. Karthik Ram. Author. Jeroen Ooms. Author. Max Held. Reviewer.            Max reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/305> Anna Krystalli. Reviewer.            Anna reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/305> Laura DeCicco. Reviewer.            Laura reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/305> . Funder.","code":""},{"path":"https://docs.ropensci.org/tic/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schratz P, Müller K, Braginsky M, Ram K, Ooms J (2023). tic: Tasks Integrating Continuously: CI-Agnostic Workflow Definitions. R package version 0.14.0, https://github.com/ropensci/tic.","code":"@Manual{,   title = {tic: Tasks Integrating Continuously: CI-Agnostic Workflow Definitions},   author = {Patrick Schratz and Kirill Müller and Mika Braginsky and Karthik Ram and Jeroen Ooms},   year = {2023},   note = {R package version 0.14.0},   url = {https://github.com/ropensci/tic}, }"},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"tic","dir":"","previous_headings":"","what":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"goal tic enhance simplify working continuous integration (CI) systems. following providers supported: addition partial support Drone CI via class DRONE_CI. means {tic} recognizes Drone CI CI platform exit early requires setting fake env var mimic another CI provider. However, neither R client package Drone CI currently {tic} templates available bootstrapping CI configuration via tic::use_tic(). learn CI, read Getting Started vignette. important improvements existing solutions : Deployment Git repository greatly simplified. Update repository results CI build. Support R packages kinds projects (bookdown, blogdown, etc.), predefined templates. Set project deploy rendered versions book blog single push Git. Workflow specification single .R file, regardless CI system used. Forget .yml files web browser configurations.","code":""},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"{tic} can installed GitHub :","code":"remotes::install_github(\"ropensci/tic\")"},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"calling tic::use_tic() production ready CI setup initialized, tailored specific R project. created templates use providers Circle CI Github Actions. CI YAML templates {tic} desired, use_<provider>_yml() functions can used. Refer complete list options. R package, following steps set CI workflow: Installation required dependencies project (dependencies scraped DESCRIPTION file*) Satisfying build-time dependencies steps run CI stages (scraping pkg::fun calls tic.R) Checking package via rcmdcheck::rcmdcheck() Creation pkgdown site including Github deployment Running code coverage upload codecov.io See Getting Started vignette information links minimal example repositories various R projects (package, blogdown, bookdown ).","code":""},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"quickstart","dir":"","previous_headings":"Setup","what":"Quickstart","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"new user, run already use {tic} want configure new CI provider, one following (depending preferred CI provider)","code":"tic::use_tic() ### Circle CI ------------------------------------------------------------------  circle::use_circle_deploy() # (optional for deployment) tic::use_circle_yml() # optional: Change `type` arg to your liking tic::use_tic_r(\"package\", deploy_on = \"circle\") # (all of the above in one call) # tic::use_tic(wizard = FALSE, linux = \"circle\", mac = \"none\", windows = \"none\", #              matrix = \"circle\", deploy = \"circle\") tic::use_update_tic()  ### GitHub Actions -------------------------------------------------------------  tic::use_ghactions_deploy() # (optional for deployment) tic::use_ghactions_yml() # optional: Change `type` arg to your liking tic::use_tic_r(\"package\", deploy_on = \"ghactions\") # (all of the above in one call) # tic::use_tic(wizard = FALSE, linux = \"ghactions\", mac = \"ghactions\", #              windows = \"ghactions\", matrix = \"ghactions\", deploy = \"ghactions\")  tic::use_tic_badge(\"ghactions\") tic::use_update_tic()"},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"good-to-know","dir":"","previous_headings":"","what":"Good to know","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"like mention {tic} choice sits top existing community efforts providing R support various CI providers. {tic} prevent dealing/learning every CIs YAML syntax, learn {tic}’s way specifying tasks CI systems. Also, way around familiarizing basics CI systems general. Without knowledge, also hard way understanding {tic}. also recommend take look projects providing direct R support CI system ({tic} builds upon) gain deeper understanding whole concept.","code":""},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"keeping-ci-templates-up-to-date","dir":"","previous_headings":"","what":"Keeping CI templates up-to-date","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"{tic} refreshing template every months. two ways stay --date functional CI YAML definition: Manual updates: can keep {tic} --date rerunning use_*_() function used init {tic} first time. forgotten settings chosen back , can look first line YAML file. Automatic updates via GHA: ’re using GitHub actions, can use tic::use_update_tic(). initialize new workflow checks daily new template updates. Important: workflow requires personal access token “workflow” scopes. creation, can add via tic::gha_add_secret() repo account. Hint: ’re operating organization, can set GHA secret organization-wide saves adding multiple single repos. See vignette “Updating Templates” information.","code":""},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"Get started Feature Overview CI Build Lifecycle CI Providers CI Client Packages Advanced Usage Deployment Custom Steps FAQ","code":""},{"path":"https://docs.ropensci.org/tic/dev/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"Tasks Integrating Continuously: CI-Agnostic Workflow Definitions","text":"setup functions package assume Git version control system, GitHub platform. Automated setup works best project test located root Git repository. Multi-project repositories supported, see comment @jwijffels guidance work around limitation. DESCRIPTION files needs live project root. simplify creation look usethis::use_package() usethis::use_description().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/Deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — Deprecated","title":"Deprecated functions — Deprecated","text":"add_package_checks() replaced do_package_checks().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/Deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — Deprecated","text":"","code":"add_package_checks(   ...,   warnings_are_errors = NULL,   notes_are_errors = NULL,   args = c(\"--no-manual\", \"--as-cran\"),   build_args = \"--force\",   error_on = \"warning\",   repos = repo_default(),   timeout = Inf )"},{"path":"https://docs.ropensci.org/tic/dev/reference/Deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated functions — Deprecated","text":"... Ignored, used enforce naming arguments. warnings_are_errors, notes_are_errors [flag] Deprecated, use error_on. args [character] Passed rcmdcheck::rcmdcheck(). Default local runs: c(\"---manual\", \"---cran\"). Default Windows: c(\"---manual\", \"---cran\", \"---vignettes\", \"---build-vignettes\", \"---multiarch\"). GitHub Actions option \"---manual\" always used (appended custom user input) LaTeX available installation time consuming error prone. build_args [character] Passed rcmdcheck::rcmdcheck(). Default local runs: \"--force\". Default Windows: c(\"---build-vignettes\", \"--force\"). error_on [character] Whether throw error R CMD check failures. Note check always completed (unless timeout happens), error thrown completion. \"never\", errors thrown. \"error\", ERROR failures generate errors. \"warning\", WARNING failures generate errors well. \"note\", check failure generated error. repos [character] Passed rcmdcheck::rcmdcheck(), default: repo_default(). timeout [numeric] Passed rcmdcheck::rcmdcheck(), default: Inf.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":null,"dir":"Reference","previous_headings":"","what":"The base class for all steps — TicStep","title":"The base class for all steps — TicStep","text":"Override class create new step.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The base class for all steps — TicStep","text":"TicStep$new() TicStep$run() TicStep$prepare() TicStep$check()","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The base class for all steps — TicStep","text":"Create TicStep object.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The base class for all steps — TicStep","text":"","code":"TicStep$new()"},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"method-run-","dir":"Reference","previous_headings":"","what":"Method run()","title":"The base class for all steps — TicStep","text":"method must overridden, called running stage step added.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The base class for all steps — TicStep","text":"","code":"TicStep$run()"},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"method-prepare-","dir":"Reference","previous_headings":"","what":"Method prepare()","title":"The base class for all steps — TicStep","text":"just placeholder. method called preparing stage step added. auto-install packages needed certain step. example, step_build_pkgdown() requires pkgdown package. add_code_step(), autodetects package calls form pkg::fun tries install packages CRAN. steps prepare_call empty, $prepare method skipped step. can useful package installed non-standard repositories, e.g. GitHub.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The base class for all steps — TicStep","text":"","code":"TicStep$prepare()"},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"method-check-","dir":"Reference","previous_headings":"","what":"Method check()","title":"The base class for all steps — TicStep","text":"method determines step prepared run. Return FALSE conditions running step met.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/TicStep.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The base class for all steps — TicStep","text":"","code":"TicStep$check()"},{"path":"https://docs.ropensci.org/tic/dev/reference/base64serialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Helpers for converting R objects to strings and back — base64serialize","title":"Helpers for converting R objects to strings and back — base64serialize","text":"base64serialize() converts R object string suitable storing environment variable. Use function encoding entire R objects (OAuth tokens). base64unserialize() inverse operation base64serialize(). Use function tic.R access R object previously encoded base64serialize().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/base64serialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helpers for converting R objects to strings and back — base64serialize","text":"","code":"base64serialize(x, compression = \"gzip\")  base64unserialize(x, compression = \"gzip\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/base64serialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helpers for converting R objects to strings and back — base64serialize","text":"x Object serialize deserialize compression Passed type argument memCompress() memDecompress().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/base64serialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helpers for converting R objects to strings and back — base64serialize","text":"","code":"serial <- base64serialize(1:10) base64unserialize(serial) #>  [1]  1  2  3  4  5  6  7  8  9 10"},{"path":"https://docs.ropensci.org/tic/dev/reference/ci.html","id":null,"dir":"Reference","previous_headings":"","what":"The current CI environment — ci","title":"The current CI environment — ci","text":"Functions return environment settings describe CI environment. value retrieved cached. ci_get_branch(): Returns current branch. Returns nothing operating tag. ci_is_tag(): Returns current tag name. Returns nothing branch selected. ci_get_slug(): Returns repo slug format user/repo org/repo ci_get_build_number(): Returns CI build number. ci_get_build_url(): Returns URL current build. ci_get_commit(): Returns SHA1 current commit. ci_get_env(): Return environment configuration variable. ci_is_env(): Checks environment configuration variable set particular value. ci_has_env(): Checks environment configuration variable set value. ci_can_push(): Checks push deployment possible. Always true local environments, CI environments require environment variable (default TIC_DEPLOY_KEY). ci_is_interactive(): Returns whether current build run interactively . Global setup operations run interactive CIs. ci_cat_with_color(): Colored output targeted CI log. code argument can unevaluated call crayon function, style applied even normally . ci_on_circle(): running Circle CI? ci_on_ghactions(): running GitHub Actions? ci(): Return current CI environment","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The current CI environment — ci","text":"","code":"ci_get_branch()  ci_is_tag()  ci_get_slug()  ci_get_build_number()  ci_get_build_url()  ci_get_commit()  ci_get_env(env)  ci_is_env(env, value)  ci_has_env(env)  ci_can_push(private_key_name = \"TIC_DEPLOY_KEY\")  ci_is_interactive()  ci_cat_with_color(code)  ci_on_circle()  ci_on_ghactions()  ci()"},{"path":"https://docs.ropensci.org/tic/dev/reference/ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The current CI environment — ci","text":"env Name environment variable check. value Value environment variable compare . private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name . code Code colored.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_blogdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a blogdown site — do_blogdown","title":"Build a blogdown site — do_blogdown","text":"do_blogdown() adds default steps related package checks \"install\", \"before_deploy\", \"script\" \"deploy\" stages. step_install_deps() \"install\" stage blogdown::install_hugo() \"install\" stage install latest version HUGO. step_session_info() \"install\" stage. step_setup_ssh() \"before_deploy\" setup upcoming deployment (deploy set), step_setup_push_deploy() \"before_deploy\" stage (deploy set), step_build_blogdown() \"deploy\" stage, forwarding ... arguments. step_do_push_deploy() \"deploy\" stage. default, public/ directory deployed gh-pages branch, keeping history. output directory blog/theme \"public\" need change \"path\" argument.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_blogdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a blogdown site — do_blogdown","text":"","code":"do_blogdown(   ...,   deploy = NULL,   orphan = FALSE,   checkout = TRUE,   path = \"public\",   branch = \"gh-pages\",   remote_url = NULL,   commit_message = NULL,   commit_paths = \".\",   force = FALSE,   private_key_name = \"TIC_DEPLOY_KEY\",   cname = NULL )"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_blogdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a blogdown site — do_blogdown","text":"... Passed step_build_blogdown() deploy [flag] TRUE, deployment setup performed building blogdown site, site deployed building . Set FALSE skip deployment. default (deploy NULL), deployment happens following conditions met: repo can pushed (see ci_can_push()). branch argument NULL (.e., deployment happens active branch), current branch default repo branch (see ci_get_branch()). orphan [flag] Create force-push orphan branch consisting one commit? can useful e.g. path = \"docs\", branch = \"gh-pages\", applied pushing current branch. checkout [flag] Check current contents repository? Defaults TRUE, set FALSE build process relies existing contents deploy different branch. path [string] Path repository, default \".\" means setting current repository. branch [string] Target branch, default: current branch. remote_url [string] URL remote Git repository push , defaults current GitHub repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. commit_paths [character] Restrict set directories /files added Git deploying. Default: deploy files. force [logical] Add --force flag git commands? private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name . cname (character(1) optional URL redirecting created website CNAME file containing given URL added root directory specified argument path.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/do_blogdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a blogdown site — do_blogdown","text":"","code":"if (FALSE) { dsl_init()  do_blogdown()  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_bookdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a bookdown book — do_bookdown","title":"Build a bookdown book — do_bookdown","text":"do_bookdown() adds default steps related package checks \"install\", \"before_deploy\", \"script\" \"deploy\" stages. step_install_deps() \"install\" stage step_session_info() \"install\" stage. step_setup_ssh() \"before_deploy\" setup upcoming deployment (deploy set), step_setup_push_deploy() \"before_deploy\" stage (deploy set), step_build_bookdown() \"deploy\" stage, forwarding ... arguments. step_do_push_deploy() \"deploy\" stage. default, _book/ directory deployed gh-pages branch, keeping history.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_bookdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a bookdown book — do_bookdown","text":"","code":"do_bookdown(   ...,   deploy = NULL,   orphan = FALSE,   checkout = TRUE,   path = \"_book\",   branch = \"gh-pages\",   remote_url = NULL,   commit_message = NULL,   commit_paths = \".\",   force = FALSE,   private_key_name = \"TIC_DEPLOY_KEY\",   cname = NULL )"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_bookdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a bookdown book — do_bookdown","text":"... Passed step_build_bookdown() deploy [flag] TRUE, deployment setup performed building bookdown site, site deployed building . Set FALSE skip deployment. default (deploy NULL), deployment happens following conditions met: repo can pushed (see ci_can_push()). branch argument NULL (.e., deployment happens active branch), current branch default repo branch (usually \"master\") (see ci_get_branch()). orphan [flag] Create force-push orphan branch consisting one commit? can useful e.g. path = \"docs\", branch = \"gh-pages\", applied pushing current branch. checkout [flag] Check current contents repository? Defaults TRUE, set FALSE build process relies existing contents deploy different branch. path [string] Path repository, default \".\" means setting current repository. branch [string] Target branch, default: current branch. remote_url [string] URL remote Git repository push , defaults current GitHub repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. commit_paths [character] Restrict set directories /files added Git deploying. Default: deploy files. force [logical] Add --force flag git commands? private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name . cname (character(1) optional URL redirecting created website CNAME file containing given URL added root directory specified argument path.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/do_bookdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a bookdown book — do_bookdown","text":"","code":"if (FALSE) { dsl_init()  do_bookdown()  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_drat.html","id":null,"dir":"Reference","previous_headings":"","what":"Build and deploy drat repository — do_drat","title":"Build and deploy drat repository — do_drat","text":"do_drat() builds deploys R packages drat repository adds default steps \"install\", \"before_deploy\" \"deploy\" stages: step_setup_ssh() \"before_deploy\" setup upcoming deployment step_setup_push_deploy() \"before_deploy\" stage (deploy set), step_add_to_drat() \"deploy\" step_do_push_deploy() \"deploy\" stage.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_drat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build and deploy drat repository — do_drat","text":"","code":"do_drat(   repo_slug = NULL,   orphan = FALSE,   checkout = TRUE,   path = \"~/git/drat\",   branch = NULL,   remote_url = NULL,   commit_message = NULL,   commit_paths = \".\",   force = FALSE,   private_key_name = \"TIC_DEPLOY_KEY\",   deploy_dev = FALSE )"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_drat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build and deploy drat repository — do_drat","text":"repo_slug [string] name drat repository deploy form :owner/:repo. orphan [flag] Create force-push orphan branch consisting one commit? can useful e.g. path = \"docs\", branch = \"gh-pages\", applied pushing current branch. checkout [flag] Check current contents repository? Defaults TRUE, set FALSE build process relies existing contents deploy different branch. path, branch default, macro deploys default repo branch (usually \"master\") drat repository. alternative option \"gh-pages\". remote_url [string] URL remote Git repository push , defaults current GitHub repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. commit_paths [character] Restrict set directories /files added Git deploying. Default: deploy files. force [logical] Add --force flag git commands? private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name . deploy_dev [logical] development versions packages also deployed drat repo? default \"major\", \"minor\" \"patch\" releases build deployed.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_drat.html","id":"deployment","dir":"Reference","previous_headings":"","what":"Deployment","title":"Build and deploy drat repository — do_drat","text":"Deployment can happen default repo branch (usually \"master\") gh-pages branch GitHub Pages functionality GitHub used access drat repository later . need enable functionality creating drat repository GitHub via Settings -> GitHub pages set chosen setting . build deploy Windows macOS binaries, builds deployment permissions need triggered. look https://docs.ropensci.org/tic/articles/deployment.html information instructions.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/do_drat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build and deploy drat repository — do_drat","text":"","code":"if (FALSE) { dsl_init()  do_drat()  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_package_checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Add default checks for packages — do_package_checks","title":"Add default checks for packages — do_package_checks","text":"do_package_checks() adds default steps related package checks \"before_install\", \"install\", \"script\" \"after_success\" stages: macro available R packages. step_install_deps() \"install\" stage, using repos argument. step_session_info() \"install\" stage. step_rcmdcheck() \"script\" stage, using warnings_are_errors, notes_are_errors, args, build_args arguments. call covr::codecov() \"after_success\" stage (codecov flag set)","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_package_checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add default checks for packages — do_package_checks","text":"","code":"do_package_checks(   ...,   codecov = !ci_is_interactive(),   warnings_are_errors = NULL,   notes_are_errors = NULL,   args = NULL,   build_args = NULL,   error_on = \"warning\",   repos = repo_default(),   dependencies = TRUE,   timeout = Inf,   check_dir = \"check\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_package_checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add default checks for packages — do_package_checks","text":"... Ignored, used enforce naming arguments. codecov [flag] Whether include step running covr::codecov(quiet = FALSE) (default: non-interactive CI, see ci_is_interactive()). warnings_are_errors, notes_are_errors [flag] Deprecated, use error_on. args [character] Passed rcmdcheck::rcmdcheck(). Default local runs: c(\"---manual\", \"---cran\"). Default Windows: c(\"---manual\", \"---cran\", \"---vignettes\", \"---build-vignettes\", \"---multiarch\"). GitHub Actions option \"---manual\" always used (appended custom user input) LaTeX available installation time consuming error prone. build_args [character] Passed rcmdcheck::rcmdcheck(). Default local runs: \"--force\". Default Windows: c(\"---build-vignettes\", \"--force\"). error_on [character] Whether throw error R CMD check failures. Note check always completed (unless timeout happens), error thrown completion. \"never\", errors thrown. \"error\", ERROR failures generate errors. \"warning\", WARNING failures generate errors well. \"note\", check failure generated error. repos [character] Passed rcmdcheck::rcmdcheck(), default: repo_default(). dependencies kinds dependencies install. commonly one following values: NA: required (hard) dependencies, TRUE: required dependencies plus optional development dependencies, FALSE: install dependencies. (might end non-working package, /installation might fail.) See Package dependency types possible values information package dependencies. timeout [numeric] Passed rcmdcheck::rcmdcheck(), default: Inf. check_dir [character]  Path specifying directory R CMD check. Defaults \"check\" easy upload artifacts.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/do_package_checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add default checks for packages — do_package_checks","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  do_package_checks() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_install_deps(dependencies=TRUE) #> ▶ step_session_info() #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_rcmdcheck(warnings_are_errors=NULL, notes_are_errors=NULL, args=NULL, build_args=NULL, error_on=\"warning\", repos=repo_default(), timeout=Inf, check_dir=\"check\") #> ── Stage: after_success ──────────────────────────────────────────────────────── #> ▶ step_run_code(covr::codecov(quiet=FALSE))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_install_deps(dependencies=TRUE) #> ▶ step_session_info() #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_rcmdcheck(warnings_are_errors=NULL, notes_are_errors=NULL, args=NULL, build_args=NULL, error_on=\"warning\", repos=repo_default(), timeout=Inf, check_dir=\"check\") #> ── Stage: after_success ──────────────────────────────────────────────────────── #> ▶ step_run_code(covr::codecov(quiet=FALSE))"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_pkgdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Build pkgdown documentation — do_pkgdown","title":"Build pkgdown documentation — do_pkgdown","text":"do_pkgdown() builds optionally deploys pkgdown site adds default steps \"install\", \"before_deploy\" \"deploy\" stages: step_install_deps() \"install\" stage step_session_info() \"install\" stage. step_setup_ssh() \"before_deploy\" setup upcoming deployment (deploy set GitHub Actions), step_setup_push_deploy() \"before_deploy\" stage (deploy set), step_build_pkgdown() \"deploy\" stage, forwarding ... arguments. step_do_push_deploy() \"deploy\" stage. default, docs/ directory deployed gh-pages branch, keeping history.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_pkgdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build pkgdown documentation — do_pkgdown","text":"","code":"do_pkgdown(   ...,   deploy = NULL,   orphan = FALSE,   checkout = TRUE,   path = \"docs\",   branch = \"gh-pages\",   remote_url = NULL,   commit_message = NULL,   commit_paths = \".\",   force = FALSE,   private_key_name = \"TIC_DEPLOY_KEY\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_pkgdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build pkgdown documentation — do_pkgdown","text":"... Passed step_build_pkgdown() deploy [flag] TRUE, deployment setup performed building pkgdown site, site deployed building . Set FALSE skip deployment. default (deploy NULL), deployment happens following conditions met: repo can pushed (see ci_can_push()). account old default \"id_rsa\" branch argument NULL (.e., deployment happens active branch), current branch default branch, contains \"cran-\" name (compatibility fledge) (see ci_get_branch()). orphan [flag] Create force-push orphan branch consisting one commit? can useful e.g. path = \"docs\", branch = \"gh-pages\", applied pushing current branch. checkout [flag] Check current contents repository? Defaults TRUE, set FALSE build process relies existing contents deploy different branch. path, branch default, macro deploys docs directory gh-pages branch. different step_push_deploy(). remote_url [string] URL remote Git repository push , defaults current GitHub repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. commit_paths [character] Restrict set directories /files added Git deploying. Default: deploy files. force [logical] Add --force flag git commands? private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/do_pkgdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build pkgdown documentation — do_pkgdown","text":"","code":"if (FALSE) { dsl_init()  do_pkgdown()  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_readme_rmd.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a R Markdown README and deploy to Github — do_readme_rmd","title":"Render a R Markdown README and deploy to Github — do_readme_rmd","text":"do_readme_rmd() renders R Markdown README deploys rendered README.md file Github. adds default steps \"before_deploy\" \"deploy\" stages: step_setup_ssh() \"before_deploy\" setup upcoming deployment step_setup_push_deploy() \"before_deploy\" stage rmarkdown::render() \"deploy\" stage step_do_push_deploy() \"deploy\" stage.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/do_readme_rmd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a R Markdown README and deploy to Github — do_readme_rmd","text":"","code":"do_readme_rmd(   checkout = TRUE,   remote_url = NULL,   commit_message = NULL,   force = FALSE,   private_key_name = \"TIC_DEPLOY_KEY\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/do_readme_rmd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a R Markdown README and deploy to Github — do_readme_rmd","text":"checkout [flag] Check current contents repository? Defaults TRUE, set FALSE build process relies existing contents deploy different branch. remote_url [string] URL remote Git repository push , defaults current GitHub repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. force [logical] Add --force flag git commands? private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/do_readme_rmd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a R Markdown README and deploy to Github — do_readme_rmd","text":"","code":"if (FALSE) { dsl_init()  do_readme_rmd()  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl.html","id":null,"dir":"Reference","previous_headings":"","what":"tic's domain-specific language — dsl","title":"tic's domain-specific language — dsl","text":"Functions define stages constituent steps. macros combine several steps assign relevant stages. See dsl_get() functions access storage stages steps. get_stage() returns TicStage object stage given name. function can called directly tic.R configuration file, processed dsl_load(). add_step() adds step stage, see step_hello_world() links therein available steps. add_code_step() shortcut add_step(step_run_code(...)).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tic's domain-specific language — dsl","text":"","code":"get_stage(name)  add_step(stage, step)  add_code_step(stage, call = NULL, prepare_call = NULL)"},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tic's domain-specific language — dsl","text":"name [string] name stage. stage [TicStage] TicStage object returned get_stage(). step [function] object class TicStep, usually created functions step_ prefix like step_hello_world(). call [call] arbitrary R expression executed stage step added. default useful pass prepare_call. prepare_call [call] optional arbitrary R expression executed preparation.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"tic's domain-specific language — dsl","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ℹ No steps defined  get_stage(\"script\") %>%   add_step(step_hello_world())  get_stage(\"script\") #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_hello_world()  get_stage(\"script\") %>%   add_code_step(print(\"Hi!\"))  get_stage(\"script\") #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_hello_world() #> ▶ step_run_code(print(\"Hi!\"))"},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Stages and steps — dsl_get","title":"Stages and steps — dsl_get","text":"tic works declarative way, centered around tic.R file created use_tic(). file contains definition steps run stage: calls get_stage() add_step(), macros like do_package_checks(). Normally, file never executed directly. Running functions interactive session carry respective actions. Instead, description code run printed console. Edit tic.R configure CI builds. See vignette(\"build-lifecycle\", package = \"tic\") details.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stages and steps — dsl_get","text":"","code":"dsl_get()  dsl_load(path = \"tic.R\", force = FALSE, quiet = FALSE)  dsl_init(quiet = FALSE)"},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stages and steps — dsl_get","text":"path [string] Path stage definition file, default: \"tic.R\". force [flag] Set TRUE force loading file even configuration exists. default existing configuration overwritten dsl_load(). quiet [flag] Set TRUE turn verbose output.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stages and steps — dsl_get","text":"named list opaque stage objects \"class\" attribute corresponding print() method pretty output. Use high-level get_stage() add_step() functions configure, stages functions run.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl_get.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stages and steps — dsl_get","text":"Stages steps defined using tic's DSL stored internal object package. stages accessible dsl_get(). running stages, default configuration defined tic.R file loaded dsl_load(). See use_tic() setting tic.R file. interactive tests, empty storage can initialized dsl_init(). happens automatically first time dsl_get() called (directly indirectly).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/dsl_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stages and steps — dsl_get","text":"","code":"if (FALSE) { dsl_init() dsl_get()  dsl_load(system.file(\"templates/package/tic.R\", package = \"tic\")) dsl_load(system.file(\"templates/package/tic.R\", package = \"tic\"),   force =     TRUE ) dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/gha_add_secret.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a GitHub Actions secret to a repository — gha_add_secret","title":"Add a GitHub Actions secret to a repository — gha_add_secret","text":"Encrypts supplied value using libsodium adds secret given GitHub repository. Secrets can used GitHub Action runs environment variables. common use case encrypt Personal Access Tokens (PAT) API keys. adding secret manually GitHub via \"Settings\" -> \"Secrets\" -> \"New repository secret\"","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/gha_add_secret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a GitHub Actions secret to a repository — gha_add_secret","text":"","code":"gha_add_secret(   secret,   name,   repo_slug = NULL,   remote = \"origin\",   visibility = \"all\",   selected_repositories = NULL )"},{"path":"https://docs.ropensci.org/tic/dev/reference/gha_add_secret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a GitHub Actions secret to a repository — gha_add_secret","text":"secret [character] value encrypted (e.g. Personal Access Token). name [character] name secret appear \"Secrets\" overview repository. repo_slug [character] Repository slug repository secret added. Must follow form owner/repo. remote [character] repo_slug = NULL, repo_slug determined respective git remote. visibility [character] level visibility secret. One \"\", \"private\", \"selected\". See https://developer.github.com/v3/actions/secrets/#create--update--organization-secret information. selected_repositories [character] Vector repository ids secret accessible. applies visibility = \"selected\" set.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/gha_add_secret.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a GitHub Actions secret to a repository — gha_add_secret","text":"","code":"if (FALSE) { gha_add_secret(\"supersecret\", name = \"MY_SECRET\", repo = \"ropensci/tic\") }"},{"path":"https://docs.ropensci.org/tic/dev/reference/github_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Github API helpers — github_helpers","title":"Github API helpers — github_helpers","text":"auth_github(): Creates GITHUB_TOKEN asks store .Renviron file. get_owner(): Returns owner Github repo. get_repo(): Returns repo name Github repo given remote. get_repo_slug(): Returns repo slug Github repo (<owner>/<repo>).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/github_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Github API helpers — github_helpers","text":"","code":"auth_github()  get_owner(remote = \"origin\")  get_user()  get_repo(remote = \"origin\")  get_repo_slug(remote = \"origin\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/github_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Github API helpers — github_helpers","text":"remote [string] Github remote used. Defaults \"origin\".","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/github_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Github information — github_repo","title":"Github information — github_repo","text":"github_repo() returns true repository name string. Retrieves metadata Git repository GitHub. github_info() returns list obtained GET \"/repos/:repo\" API.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/github_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Github information — github_repo","text":"","code":"github_repo(   path = usethis::proj_get(),   info = github_info(path, remote = remote),   remote = \"origin\" )  github_info(path = usethis::proj_get(), remote = \"origin\")  uses_github(path = usethis::proj_get())"},{"path":"https://docs.ropensci.org/tic/dev/reference/github_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Github information — github_repo","text":"path [string] path GitHub-enabled Git repository (subdirectory thereof). info [list] GitHub information repository, default obtained github_info(). remote [string] Github remote used. Defaults \"origin\".","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/list_macros.html","id":null,"dir":"Reference","previous_headings":"","what":"List available macros — list_macros","title":"List available macros — list_macros","text":"Lists available macro functions tic package.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/list_macros.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available macros — list_macros","text":"","code":"list_macros()"},{"path":"https://docs.ropensci.org/tic/dev/reference/list_macros.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available macros — list_macros","text":"character","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/macro.html","id":null,"dir":"Reference","previous_headings":"","what":"Macros — macro","title":"Macros — macro","text":"DSL offers fine-grained interface individual stages CI run. Macros tic's way adding several related steps relevant stages. macros use do_ prefix. do_package_checks() macro adds default checks R packages, including installation dependencies running test coverage analysis. do_pkgdown() macro adds necessary steps building deploying pkgdown documentation package. do_blogdown() macro adds necessary steps building deploying blogdown blog. do_bookdown() macro adds necessary steps building deploying bookdown book. do_drat() macro adds necessary steps building deploying drat repository host R package sources. do_readme_rmd() macro renders R Markdown README deploys rendered README.md file Github.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/prepare_all_stages.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare all stages — prepare_all_stages","title":"Prepare all stages — prepare_all_stages","text":"Run prepare() method defined steps check() method returns TRUE.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/prepare_all_stages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare all stages — prepare_all_stages","text":"","code":"prepare_all_stages(stages = dsl_load())"},{"path":"https://docs.ropensci.org/tic/dev/reference/prepare_all_stages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare all stages — prepare_all_stages","text":"stages [named list] named list TicStage objects returned dsl_load(), default loaded tic.R.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcuts for accessing CRAN-like repositories — repo","title":"Shortcuts for accessing CRAN-like repositories — repo","text":"functions can used convenient shortcuts repos argument e.g. do_package_checks() step_install_deps(). repo_default() returns value \"repos\" option, repo_cloud() option set. repo_cloud() returns RStudio's CRAN mirror. repo_cran() returns master CRAN repo. repo_bioc() returns Bioconductor repos remotes::bioc_install_repos(), addition default repo.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcuts for accessing CRAN-like repositories — repo","text":"","code":"repo_default()  repo_cloud()  repo_cran()  repo_bioc(base = repo_default())"},{"path":"https://docs.ropensci.org/tic/dev/reference/repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcuts for accessing CRAN-like repositories — repo","text":"base base repo use, defaults repo_default(). Pass NULL install Bioconductor repos.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/run_all_stages.html","id":null,"dir":"Reference","previous_headings":"","what":"Emulate a CI run locally — run_all_stages","title":"Emulate a CI run locally — run_all_stages","text":"Runs predefined stages similarly chosen CI provider. run aborts error, after_failure stage never run.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/run_all_stages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Emulate a CI run locally — run_all_stages","text":"","code":"run_all_stages(stages = dsl_load())"},{"path":"https://docs.ropensci.org/tic/dev/reference/run_all_stages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Emulate a CI run locally — run_all_stages","text":"stages [named list] named list TicStage objects returned dsl_load(), default loaded tic.R.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/run_all_stages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Emulate a CI run locally — run_all_stages","text":"stages run following order: before_install() install() after_install() before_script() script() after_success() before_deploy() deploy() after_deploy() after_script()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/run_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a stage — run_stage","title":"Run a stage — run_stage","text":"Run run_all() method defined steps stage check() method returns TRUE.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/run_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a stage — run_stage","text":"","code":"run_stage(name, stages = dsl_load())"},{"path":"https://docs.ropensci.org/tic/dev/reference/run_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a stage — run_stage","text":"name [string] name stage run. stages [named list] named list TicStage objects returned dsl_load(), default loaded tic.R.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/ssh_key_helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"SSH key helpers — ssh_key_helpers","title":"SSH key helpers — ssh_key_helpers","text":"SSH key helpers","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/ssh_key_helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SSH key helpers — ssh_key_helpers","text":"","code":"github_add_key(   pubkey,   repo = get_repo(remote),   user = get_user(),   title = \"ghactions\",   remote = \"origin\",   check_role = TRUE )  check_admin_repo(owner, user, repo)  get_role_in_repo(owner, user, repo)  get_public_key(key)  encode_private_key(key)  check_private_key_name(string)"},{"path":"https://docs.ropensci.org/tic/dev/reference/ssh_key_helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SSH key helpers — ssh_key_helpers","text":"pubkey public key SSH key pair repo [string] repository slug use. Must follow \"user/repo\" structure. user name user account title title key add remote [string] Github remote used. Defaults \"origin\". check_role Whether check current user permissions add key repo. Setting FALSE makes possible add keys repos just one function called. owner owner repository key SSH key pair object string String check","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/stages.html","id":null,"dir":"Reference","previous_headings":"","what":"Predefined stages — stages","title":"Predefined stages — stages","text":"Stages available CI provider, shortcuts defined. functions call run_stage() corresponding stage name.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/stages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predefined stages — stages","text":"","code":"before_install(stages = dsl_load())  install(stages = dsl_load())  after_install(stages = dsl_load())  before_script(stages = dsl_load())  script(stages = dsl_load())  after_success(stages = dsl_load())  after_failure(stages = dsl_load())  before_deploy(stages = dsl_load())  deploy(stages = dsl_load())  after_deploy(stages = dsl_load())  after_script(stages = dsl_load())"},{"path":"https://docs.ropensci.org/tic/dev/reference/stages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predefined stages — stages","text":"stages [named list] named list TicStage objects returned dsl_load(), default loaded tic.R.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_drat.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Add built package to a drat — step_add_to_drat","title":"Step: Add built package to a drat — step_add_to_drat","text":"Builds package (binary OS X Windows) inserts existing drat repository via drat::insertPackage().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_drat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Add built package to a drat — step_add_to_drat","text":"","code":"step_add_to_drat(repo_slug = NULL, deploy_dev = FALSE)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_drat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Add built package to a drat — step_add_to_drat","text":"repo_slug [string] name drat repository deploy form :owner/:repo. deploy_dev [logical] development versions packages also deployed drat repo? default \"major\", \"minor\" \"patch\" releases build deployed.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_drat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Add built package to a drat — step_add_to_drat","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_add_to_drat())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_add_to_drat()"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_known_hosts.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Add to known hosts — step_add_to_known_hosts","title":"Step: Add to known hosts — step_add_to_known_hosts","text":"Adds host name ~/.ssh/known_hosts file allow subsequent SSH access. Requires ssh-keyscan system PATH.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_known_hosts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Add to known hosts — step_add_to_known_hosts","text":"","code":"step_add_to_known_hosts(host = \"github.com\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_known_hosts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Add to known hosts — step_add_to_known_hosts","text":"host [string] host name add known_hosts file, default: github.com.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_add_to_known_hosts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Add to known hosts — step_add_to_known_hosts","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"before_deploy\") %>%   add_step(step_add_to_known_hosts(\"gitlab.com\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: before_deploy ──────────────────────────────────────────────────────── #> ▶ step_add_to_known_hosts(\"gitlab.com\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_blogdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Build a Blogdown Site — step_build_blogdown","title":"Step: Build a Blogdown Site — step_build_blogdown","text":"Build Blogdown site using blogdown::build_site().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_blogdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Build a Blogdown Site — step_build_blogdown","text":"","code":"step_build_blogdown(...)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_blogdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Build a Blogdown Site — step_build_blogdown","text":"... Arguments passed blogdown::build_site local Whether build website locally. argument passed hugo_build(), local = TRUE mainly serving site locally via serve_site(). run_hugo Whether run hugo_build() R Markdown files compiled. build_rmd Whether (re)build R Markdown files. default, built. See ‘Details’ build_rmd = TRUE works. Alternatively, can take vector file paths, means files (re)built. can provide function takes vector paths R Markdown files content/ directory, returns vector paths files built, e.g., build_rmd = blogdown::filter_timestamp. aliases currently provided functions: build_rmd = 'newfile' equivalent build_rmd = blogdown::filter_newfile, build_rmd = 'timestamp' equivalent build_rmd = blogdown::filter_timestamp, build_rmd = 'md5sum' equivalent build_rmd = blogdown::filter_md5sum.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_blogdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Build a Blogdown Site — step_build_blogdown","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_build_blogdown(\".\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_build_blogdown(\".\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_bookdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Build a bookdown book — step_build_bookdown","title":"Step: Build a bookdown book — step_build_bookdown","text":"Build bookdown book using bookdown::render_book().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_bookdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Build a bookdown book — step_build_bookdown","text":"","code":"step_build_bookdown(...)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_bookdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Build a bookdown book — step_build_bookdown","text":"... See bookdown::render_book.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_bookdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Build a bookdown book — step_build_bookdown","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_build_bookdown(\".\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_build_bookdown(\".\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_pkgdown.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Build pkgdown documentation — step_build_pkgdown","title":"Step: Build pkgdown documentation — step_build_pkgdown","text":"Builds package documentation pkgdown package. Calls pkgdown::clean_site() pkgdown::build_site(...).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_pkgdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Build pkgdown documentation — step_build_pkgdown","text":"","code":"step_build_pkgdown(...)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_pkgdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Build pkgdown documentation — step_build_pkgdown","text":"... Arguments passed pkgdown::build_site pkg Path package. examples Run examples? run_dont_run Run examples surrounded \\dontrun? seed Seed used initialize random examples reproducible. lazy TRUE, rebuild articles reference pages source newer destination. override optional named list used temporarily override values _pkgdown.yml preview TRUE, .na(preview) && interactive(), preview freshly generated section browser. devel Use development deployment process? TRUE, uses lighter-weight process suitable rapid iteration; run examples vignettes current process, load code pkgload::load_all(). FALSE, first install package temporary library, run examples vignettes new process. build_site() defaults devel = FALSE get high fidelity outputs building complete site; build_reference(), build_home() friends default devel = TRUE can rapidly iterate development. new_process TRUE, run build_site() separate process. enhances reproducibility ensuring nothing loaded current process affects build process. install TRUE, install package temporary library available vignettes. document Deprecated Use devel instead.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_build_pkgdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Build pkgdown documentation — step_build_pkgdown","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_build_pkgdown())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_build_pkgdown()"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_do_push_deploy.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Perform push deploy — step_do_push_deploy","title":"Step: Perform push deploy — step_do_push_deploy","text":"Commits pushes repo prepared step_setup_push_deploy(). Deployment usually requires setting SSH keys use_tic().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_do_push_deploy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Perform push deploy — step_do_push_deploy","text":"","code":"step_do_push_deploy(   path = \".\",   commit_message = NULL,   commit_paths = \".\",   force = FALSE )"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_do_push_deploy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Perform push deploy — step_do_push_deploy","text":"path [string] Path repository, default \".\" means setting current repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. commit_paths [character] Restrict set directories /files added Git deploying. Default: deploy files. force [logical] Add --force flag git commands?","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_do_push_deploy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Step: Perform push deploy — step_do_push_deploy","text":"highly recommended restrict set files touched deployment commit_paths argument: step assumes can freely overwrite changes files commit_paths, warn case conflicts. mitigate conflicts race conditions greatest extent possible, following strategy used: changes committed branch pushing, new commits fetched, changes cherry-picked top new commits new commits pushed CI run started, strategy equivalent committing pushing. opposite case, remote repo new commits, deployment safely applied current tip.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_do_push_deploy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Perform push deploy — step_do_push_deploy","text":"","code":"if (FALSE) { dsl_init()  # Deployment only works if a companion step_setup_push_deploy() is added get_stage(\"deploy\") %>%   add_step(step_setup_push_deploy(path = \"docs\", branch = \"gh-pages\")) %>%   add_step(step_build_pkgdown())  if (rlang::is_installed(\"git2r\") && git2r::in_repository()) {   get_stage(\"deploy\") %>%     add_step(step_do_push_deploy(path = \"docs\")) }  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_hello_world.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Hello, world! — step_hello_world","title":"Step: Hello, world! — step_hello_world","text":"simplest step possible: prints \"Hello, world!\" console run, require preparation. step may useful test tic setup starting point implementing custom step.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_hello_world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Hello, world! — step_hello_world","text":"","code":"step_hello_world()"},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_hello_world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Hello, world! — step_hello_world","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_hello_world())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_hello_world()"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Install packages — step_install_pkg","title":"Step: Install packages — step_install_pkg","text":"steps useful CI run needs additional packages. Usually declared dependencies DESCRIPTION, also possible install dependencies manually. default, binary versions packages installed possible, even CRAN version ahead. step_install_deps() step installs package dependencies declared DESCRIPTION, using pak::local_install_dev_deps(). includes upgrading outdated packages. step can used DESCRIPTION file present repository root. step_install_cran() step installs one package CRAN via install.packages(), already installed. step_install_github() step installs one packages GitHub via pak::pkg_install(), packages installed GitHub version different locally installed version.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_pkg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Install packages — step_install_pkg","text":"","code":"step_install_deps(dependencies = TRUE)  step_install_cran(package = NULL, ...)  step_install_github(repo = NULL, ...)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_pkg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Install packages — step_install_pkg","text":"dependencies kinds dependencies install. commonly one following values: NA: required (hard) dependencies, TRUE: required dependencies plus optional development dependencies, FALSE: install dependencies. (might end non-working package, /installation might fail.) See Package dependency types possible values information package dependencies. package Package(s) install ... Passed pak::pkg_install(). repo Package install \"user/repo\" format.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_pkg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Install packages — step_install_pkg","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"install\") %>%   add_step(step_install_deps())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_install_deps() dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"install\") %>%   add_step(step_install_cran(\"magick\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_install_cran(\"magick\") dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"install\") %>%   add_step(step_install_github(\"rstudio/gt\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_install_github(\"rstudio/gt\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_ssh_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Install an SSH key — step_install_ssh_keys","title":"Step: Install an SSH key — step_install_ssh_keys","text":"Writes private SSH key encoded environment variable file ~/.ssh. run non-interactive settings environment variable exists non-empty. use_ghactions_deploy() use_tic() functions encode private key environment variable use function.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_ssh_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Install an SSH key — step_install_ssh_keys","text":"","code":"step_install_ssh_keys(private_key_name = \"TIC_DEPLOY_KEY\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_ssh_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Install an SSH key — step_install_ssh_keys","text":"private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_install_ssh_keys.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Install an SSH key — step_install_ssh_keys","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"before_deploy\") %>%   add_step(step_install_ssh_keys())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: before_deploy ──────────────────────────────────────────────────────── #> ▶ step_install_ssh_keys()"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_push_deploy.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Setup and perform push deploy — step_push_deploy","title":"Step: Setup and perform push deploy — step_push_deploy","text":"Clones repo, initializes author information, sets remotes, commits, pushes. Combines step_setup_push_deploy() checkout = FALSE suitable orphan argument, step_do_push_deploy(). Deployment usually requires setting SSH keys use_tic().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_push_deploy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Setup and perform push deploy — step_push_deploy","text":"","code":"step_push_deploy(   path = \".\",   branch = NULL,   remote_url = NULL,   commit_message = NULL,   commit_paths = \".\",   force = FALSE )"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_push_deploy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Setup and perform push deploy — step_push_deploy","text":"path [string] Path repository, default \".\" means setting current repository. branch [string] Target branch, default: current branch. remote_url [string] URL remote Git repository push , defaults current GitHub repository. commit_message [string] Commit message use, defaults useful message linking CI build avoiding recursive CI runs. commit_paths [character] Restrict set directories /files added Git deploying. Default: deploy files. force [logical] Add --force flag git commands?","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_push_deploy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Step: Setup and perform push deploy — step_push_deploy","text":"Setup deployment combined one step, files deployed must prepared previous step. poses restrictions repository can initialized, particular nonstandard path argument orphan = TRUE can supported (used). control, create two separate steps step_setup_push_deploy() step_do_push_deploy(), create files deployed steps.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_push_deploy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Setup and perform push deploy — step_push_deploy","text":"","code":"if (FALSE) { dsl_init()  get_stage(\"script\") %>%   add_step(step_push_deploy(commit_paths = c(\"NAMESPACE\", \"man\")))  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_rcmdcheck.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Check a package — step_rcmdcheck","title":"Step: Check a package — step_rcmdcheck","text":"Check package using rcmdcheck::rcmdcheck(), ultimately calls R CMD check.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_rcmdcheck.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Check a package — step_rcmdcheck","text":"","code":"step_rcmdcheck(   ...,   warnings_are_errors = NULL,   notes_are_errors = NULL,   args = NULL,   build_args = NULL,   error_on = \"warning\",   repos = repo_default(),   timeout = Inf,   check_dir = \"check\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_rcmdcheck.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Check a package — step_rcmdcheck","text":"... Ignored, used enforce naming arguments. warnings_are_errors, notes_are_errors [flag] Deprecated, use error_on. args [character] Passed rcmdcheck::rcmdcheck(). Default local runs: c(\"---manual\", \"---cran\"). Default Windows: c(\"---manual\", \"---cran\", \"---vignettes\", \"---build-vignettes\", \"---multiarch\"). GitHub Actions option \"---manual\" always used (appended custom user input) LaTeX available installation time consuming error prone. build_args [character] Passed rcmdcheck::rcmdcheck(). Default local runs: \"--force\". Default Windows: c(\"---build-vignettes\", \"--force\"). error_on [character] Whether throw error R CMD check failures. Note check always completed (unless timeout happens), error thrown completion. \"never\", errors thrown. \"error\", ERROR failures generate errors. \"warning\", WARNING failures generate errors well. \"note\", check failure generated error. repos [character] Passed rcmdcheck::rcmdcheck(), default: repo_default(). timeout [numeric] Passed rcmdcheck::rcmdcheck(), default: Inf. check_dir [character]  Path specifying directory R CMD check. Defaults \"check\" easy upload artifacts.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_rcmdcheck.html","id":"updating-of-dependency-packages","dir":"Reference","previous_headings":"","what":"Updating of (dependency) packages","title":"Step: Check a package — step_rcmdcheck","text":"Packages shipped R-installation updated overwritten R-installer build. want package updated, please add following step workflow: add_code_step(remotes::update_packages(\"<pkg>\")).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_rcmdcheck.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Check a package — step_rcmdcheck","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_rcmdcheck(error_on = \"note\", repos = repo_bioc()))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_rcmdcheck(error_on=\"note\", repos=repo_bioc())"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_run_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Run arbitrary R code — step_run_code","title":"Step: Run arbitrary R code — step_run_code","text":"Captures expression executes running step. optional preparatory expression can provided executed preparation. top-level expression qualified function call (format package::fun()), package installed preparation.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_run_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Run arbitrary R code — step_run_code","text":"","code":"step_run_code(call = NULL, prepare_call = NULL)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_run_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Run arbitrary R code — step_run_code","text":"call [call] arbitrary R expression executed stage step added. default useful pass prepare_call. prepare_call [call] optional arbitrary R expression executed preparation.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_run_code.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Run arbitrary R code — step_run_code","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"install\") %>%   add_step(step_run_code(update.packages(ask = FALSE)))  # Will install covr from CRAN during preparation: get_stage(\"after_success\") %>%   add_code_step(covr::codecov())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_run_code(update.packages(ask=FALSE)) #> ── Stage: after_success ──────────────────────────────────────────────────────── #> ▶ step_run_code(covr::codecov())"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_session_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Print the current Session Info — step_session_info","title":"Step: Print the current Session Info — step_session_info","text":"Prints package information current session via sessioninfo::session_info().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_session_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Print the current Session Info — step_session_info","text":"","code":"step_session_info()"},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_session_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Print the current Session Info — step_session_info","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"install\") %>%   add_step(step_session_info())  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: install ────────────────────────────────────────────────────────────── #> ▶ step_session_info()"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_push_deploy.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Setup push deploy — step_setup_push_deploy","title":"Step: Setup push deploy — step_setup_push_deploy","text":"Clones repo, inits author information, sets remotes subsequent step_do_push_deploy().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_push_deploy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Setup push deploy — step_setup_push_deploy","text":"","code":"step_setup_push_deploy(   path = \".\",   branch = NULL,   orphan = FALSE,   remote_url = NULL,   checkout = TRUE )"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_push_deploy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Setup push deploy — step_setup_push_deploy","text":"path [string] Path repository, default \".\" means setting current repository. branch [string] Target branch, default: current branch. orphan [flag] Create force-push orphan branch consisting one commit? can useful e.g. path = \"docs\", branch = \"gh-pages\", applied pushing current branch. remote_url [string] URL remote Git repository push , defaults current GitHub repository. checkout [flag] Check current contents repository? Defaults TRUE, set FALSE build process relies existing contents deploy different branch.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_push_deploy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Setup push deploy — step_setup_push_deploy","text":"","code":"if (FALSE) { dsl_init()  get_stage(\"deploy\") %>%   add_step(step_setup_push_deploy(path = \"docs\", branch = \"gh-pages\")) %>%   add_step(step_build_pkgdown())  # This example needs a Git repository if (rlang::is_installed(\"git2r\") && git2r::in_repository()) {   # Deployment only works if a companion step_do_push_deploy() is added   get_stage(\"deploy\") %>%     add_step(step_do_push_deploy(path = \"docs\")) }  dsl_get() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_ssh.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Setup SSH — step_setup_ssh","title":"Step: Setup SSH — step_setup_ssh","text":"Adds known hosts, installs private key, tests connection. Chaining step_install_ssh_keys(), step_add_to_known_hosts() step_test_ssh(). use_tic() encodes private key environment variable use function.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_ssh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Setup SSH — step_setup_ssh","text":"","code":"step_setup_ssh(   private_key_name = \"TIC_DEPLOY_KEY\",   host = \"github.com\",   url = paste0(\"git@\", host),   verbose = \"\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_ssh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Setup SSH — step_setup_ssh","text":"private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name . host [string] host name add known_hosts file, default: github.com. url [string] URL establish SSH connection , default git@github.com verbose [string] Verbosity, default \"\". Use -v \"-vvv\" verbosity.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_setup_ssh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Setup SSH — step_setup_ssh","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_setup_ssh(host = \"gitlab.com\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_setup_ssh(host=\"gitlab.com\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_test_ssh.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Test SSH connection — step_test_ssh","title":"Step: Test SSH connection — step_test_ssh","text":"Establishes SSH connection. step fail connection established, prints verbose output default. useful troubleshooting deployment problems.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_test_ssh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Test SSH connection — step_test_ssh","text":"","code":"step_test_ssh(   url = \"git@github.com\",   verbose = \"\",   private_key_name = \"TIC_DEPLOY_KEY\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_test_ssh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Test SSH connection — step_test_ssh","text":"url [string] URL establish SSH connection , default git@github.com verbose [string] Verbosity, default \"\". Use -v \"-vvv\" verbosity. private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_test_ssh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Test SSH connection — step_test_ssh","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_test_ssh(verbose = \"-vvv\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_test_ssh(verbose=\"-vvv\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_write_text_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Step: Write a text file — step_write_text_file","title":"Step: Write a text file — step_write_text_file","text":"Creates text file arbitrary contents","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/step_write_text_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Step: Write a text file — step_write_text_file","text":"","code":"step_write_text_file(..., path)"},{"path":"https://docs.ropensci.org/tic/dev/reference/step_write_text_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Step: Write a text file — step_write_text_file","text":"... [character] Contents text file. path [string] Path new text file.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/step_write_text_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Step: Write a text file — step_write_text_file","text":"","code":"dsl_init() #> ✔ Creating a clean tic stage configuration #> ℹ See `?tic::dsl_get` for details  get_stage(\"script\") %>%   add_step(step_write_text_file(\"Hi!\", path = \"hello.txt\"))  dsl_get() #> ── tic configuration summary ─────────────────────────────────────────────────── #> ── Stage: script ─────────────────────────────────────────────────────────────── #> ▶ step_write_text_file(\"Hi!\", path=\"hello.txt\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/tic-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tic: Tasks Integrating Continuously: CI-Agnostic Workflow Definitions — tic-package","title":"tic: Tasks Integrating Continuously: CI-Agnostic Workflow Definitions — tic-package","text":"Provides way describe common build deployment workflows R-based projects: packages, websites (e.g. blogdown, pkgdown), data processing (e.g. research compendia). recipe described independent continuous integration tool used processing workflow (e.g. 'GitHub Actions' 'Circle CI'). package peer-reviewed rOpenSci (v0.3.0.9004).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/tic-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"tic: Tasks Integrating Continuously: CI-Agnostic Workflow Definitions — tic-package","text":"use_tic() function prepares code repository use package. See DSL overview tic's domain-specific language defining stages steps, step_hello_world() links therein available steps, macro overview available macros bundle several steps.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/tic-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tic: Tasks Integrating Continuously: CI-Agnostic Workflow Definitions — tic-package","text":"Maintainer: Patrick Schratz patrick.schratz@gmail.com (ORCID) Authors: Kirill Müller (ORCID) Mika Braginsky mika.br@gmail.com Karthik Ram karthik.ram@gmail.com Jeroen Ooms jeroen.ooms@stat.ucla.edu contributors: Max Held (Max reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/305>) [reviewer] Anna Krystalli (Anna reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/305>) [reviewer] Laura DeCicco (Laura reviewed package ropensci, see <https://github.com/ropensci/software-review/issues/305>) [reviewer] rOpenSci [funder]","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/update_yml.html","id":null,"dir":"Reference","previous_headings":"","what":"Update tic YAML Templates — update_yml","title":"Update tic YAML Templates — update_yml","text":"Updates YAML templates latest versions. Currently GitHub Actions Circle CI templates supported.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/update_yml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update tic YAML Templates — update_yml","text":"","code":"update_yml(template_in = NULL, template_out = NULL)"},{"path":"https://docs.ropensci.org/tic/dev/reference/update_yml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update tic YAML Templates — update_yml","text":"template_in [character] Path template updated. default standard template paths GitHub Actions Circle CI searched updated exist. Alternatively full path single template can passed. template_out [character] updated template written . mainly used internal testing purposes set user.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/update_yml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update tic YAML Templates — update_yml","text":"default workflow files starting tic matched. means can multiple YAML files update support, e.g. \"tic.yml\" \"tic-db.yml\".","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/update_yml.html","id":"formatting-requirements-of-tic-yaml-templates","dir":"Reference","previous_headings":"","what":"Formatting requirements of tic YAML templates","title":"Update tic YAML Templates — update_yml","text":"ensure updating tic templates works, ensure following points: template contains type (e.g. linux-matrix-deploy) revision date first two lines. inserting comments custom code blocks, one-line comments allowed. Otherwise update heuristic gets trouble.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/update_yml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update tic YAML Templates — update_yml","text":"","code":"if (FALSE) { # auto-search update_yml()  update_yml(\"tic.yml\")  # custom named templates update_yml(\"custom-name.yml\")  # full paths update_yml(\"~/path/to/repo/.github/workflows/tic.yml\") }"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_ghactions_deploy.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup deployment for GitHub Actions — use_ghactions_deploy","title":"Setup deployment for GitHub Actions — use_ghactions_deploy","text":"Creates public-private key pair, adds public key GitHub repository via github_add_key(), stores private key \"secret\" GitHub repo.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_ghactions_deploy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup deployment for GitHub Actions — use_ghactions_deploy","text":"","code":"use_ghactions_deploy(   path = usethis::proj_get(),   repo = get_repo_slug(remote),   key_name_private = \"TIC_DEPLOY_KEY\",   key_name_public = \"Deploy key for GitHub Actions\",   remote = \"origin\" )"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_ghactions_deploy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup deployment for GitHub Actions — use_ghactions_deploy","text":"path [string]  path repository. repo [string] repository slug use. Must follow \"user/repo\" structure. key_name_private [string] name private key SSH key pair created. supplied, \"TIC_DEPLOY_KEY\" used. key_name_public [string] name private key SSH key pair created. supplied, \"Deploy key GitHub Actions\" used. remote [string] GitHub remote used. Defaults \"origin\".","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize CI testing using tic — use_tic","title":"Initialize CI testing using tic — use_tic","text":"Prepares repo building deploying supported tic.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize CI testing using tic — use_tic","text":"","code":"use_tic(   wizard = interactive(),   linux = \"ghactions\",   mac = \"ghactions\",   windows = \"ghactions\",   deploy = \"ghactions\",   matrix = \"none\",   private_key_name = \"TIC_DEPLOY_KEY\",   quiet = FALSE )"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize CI testing using tic — use_tic","text":"wizard [flag] Interactive operation? TRUE, menu shown. linux [string] CI provider(s) use test Linux. Possible options \"circle\", \"ghactions\", \"none\"/NULL \"\". mac [string] CI provider(s) use test macOS Possible options \"none\"/NULL \"ghactions\". windows [string] CI provider(s) use test Windows Possible options \"none\"/NULL, \"ghactions\". deploy [string] CI provider(s) use deploy artifacts pkgdown documentation. Possible options \"circle\", \"ghactions\", \"none\"/NULLand\"\"`. matrix [string] CI provider(s) set matrix builds. Possible options  \"circle\", \"ghactions\", \"none\"/NULL \"\". private_key_name string needed deploying builds GitHub Actions. set custom name private key creation SSH key pair via tic::use_ghactions_deploy()] use_tic(), pass name . quiet [flag] Less verbose output? Default: FALSE.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initialize CI testing using tic — use_tic","text":"Query information CI providers used Setup permissions providers selected deployment Create YAML files selected providers Create default tic.R file depending repo type (package, website, bookdown, ...)","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize CI testing using tic — use_tic","text":"","code":"# Requires interactive mode if (FALSE) {   use_tic()    # Pre-specified settings favoring Circle CI:   use_tic(     wizard = FALSE,     linux = \"circle\",     mac = \"ghactions\",     windows = \"ghactions\",     deploy = \"circle\",     matrix = \"all\"   ) }"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_badge.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a CI Status Badge to README files — use_tic_badge","title":"Add a CI Status Badge to README files — use_tic_badge","text":"Adds CI status badge README.Rmd README.md. default label \"tic\". custom branch can specified via argument branch.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_badge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a CI Status Badge to README files — use_tic_badge","text":"","code":"use_tic_badge(provider, branch = NULL, label = \"tic\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_badge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a CI Status Badge to README files — use_tic_badge","text":"provider character(1) CI provider generate badge . ghactions currently supported branch character(1) branch badge represent? Defaults default repo branch. label character(1) Text use badge.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_badge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a CI Status Badge to README files — use_tic_badge","text":"","code":"if (FALSE) { use_tic_badge(provider = \"ghactions\")  # use a different branch use_tic_badge(provider = \"ghactions\", branch = \"develop\") }"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_r.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a tic.R file to the repo — use_tic_r","title":"Add a tic.R file to the repo — use_tic_r","text":"Adds tic.R file containing macros/steps/stages run CI runs. content depends repo type (detected automatically used within use_tic()).","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_r.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a tic.R file to the repo — use_tic_r","text":"","code":"use_tic_r(repo_type, deploy_on = \"none\")"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_r.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a tic.R file to the repo — use_tic_r","text":"repo_type (character(1)) type template used. Possible values \"package\", \"site\", \"blogdown\", \"bookdown\" \"unknown\". deploy_on (character(1)) CI provider perform deployment? Defaults NULL means deployment done. Possible values \"ghactions\" \"circle\".","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/reference/use_tic_r.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a tic.R file to the repo — use_tic_r","text":"","code":"if (FALSE) { use_tic_r(\"package\") use_tic_r(\"package\", deploy_on = \"ghactions\") use_tic_r(\"blogdown\", deploy_on = \"all\") }"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_update_tic.html","id":null,"dir":"Reference","previous_headings":"","what":"Update tic Templates — use_update_tic","title":"Update tic Templates — use_update_tic","text":"Adds GitHub Actions workflow (update-tic.yml) check tic template updates day. Internally, update_yml() called. Pull Request opened newer upstream version local tic template found. workflow relies GITHUB_PAT \"workflow\" scopes GitHub Actions templates updated. Generate GITHUB PAT add secret repo gha_add_secret().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/use_update_tic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update tic Templates — use_update_tic","text":"","code":"use_update_tic()"},{"path":"https://docs.ropensci.org/tic/dev/reference/use_update_tic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update tic Templates — use_update_tic","text":"","code":"if (FALSE) { use_update_tic() }"},{"path":"https://docs.ropensci.org/tic/dev/reference/yaml_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Use CI YAML templates — yaml_templates","title":"Use CI YAML templates — yaml_templates","text":"Installs YAML templates various CI providers. functions also used within use_tic(). want update existing template use update_yml().","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/yaml_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use CI YAML templates — yaml_templates","text":"","code":"use_circle_yml(type = \"linux-deploy\", write = TRUE, quiet = FALSE)  use_ghactions_yml(type = \"linux-deploy\", write = TRUE, quiet = FALSE)"},{"path":"https://docs.ropensci.org/tic/dev/reference/yaml_templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use CI YAML templates — yaml_templates","text":"type [character] template use. string given following logic <platform>-<action>. See details . write [logical] Whether write template disk (TRUE) just return (FALSE). quiet [logical] Whether print informative messages.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/yaml_templates.html","id":"pkgdown","dir":"Reference","previous_headings":"","what":"pkgdown","title":"Use CI YAML templates — yaml_templates","text":"type contains \"deploy\", tic default also sets environment variable BUILD_PKGDOWN=true. triggers call pkgdown::build_site() via do_pkgdown macro tic.R respective runners. setting  includes \"matrix\" builds multiple R versions, job building R release chosen build pkgdown site.","code":""},{"path":"https://docs.ropensci.org/tic/dev/reference/yaml_templates.html","id":"yaml-type","dir":"Reference","previous_headings":"","what":"YAML Type","title":"Use CI YAML templates — yaml_templates","text":"tic supports variety different YAML templates follow <platform>-<action> pattern. first one mandatory, others optional. Possible values <platform> linux, macos, windows. Possible values <action> matrix deploy. Special types custom custom-deploy. used runner matrix completely user-defined. mainly useful update_yml(). backward compatibility use_ghactions_yml() default build deploy platforms. list available combinations:","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0140-2023-12-15","dir":"Changelog","previous_headings":"","what":"tic 0.14.0 (2023-12-15)","title":"tic 0.14.0 (2023-12-15)","text":"Install {tic} via r-universe avoid re-installation issues {pak} Switch official actions/save actions/restore actions support always save restore cache Update templates","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0133-2023-05-22","dir":"Changelog","previous_headings":"","what":"tic 0.13.3 (2023-05-22)","title":"tic 0.13.3 (2023-05-22)","text":"Updated actions/upload-artifact version v3 silence nodejs deprecation warnings","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0132-2022-11-23","dir":"Changelog","previous_headings":"","what":"tic 0.13.2 (2022-11-23)","title":"tic 0.13.2 (2022-11-23)","text":"Bump template revision: account GHA deprecation warnings regarding set-output save-state","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0131-2022-08-28","dir":"Changelog","previous_headings":"","what":"tic 0.13.1 (2022-08-28)","title":"tic 0.13.1 (2022-08-28)","text":"Circle CI: install pandoc deploy stage use RSPM binaries R-devel (binaries available) Bump templates 2022-08-28","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0130-2022-08-28","dir":"Changelog","previous_headings":"","what":"tic 0.13.0 (2022-08-28)","title":"tic 0.13.0 (2022-08-28)","text":"Use {pak} pkg installation binaries Linux (#327) Update instructions building {sf} {terra} source (#326) use_*_yml(): change default template type use Linux runners Add basic support Drone CI (#325)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0120-2022-03-01","dir":"Changelog","previous_headings":"","what":"tic 0.12.0 (2022-03-01)","title":"tic 0.12.0 (2022-03-01)","text":"Remove ccache parts Run nightly builds also main branch Update setup-tinytex@v2 Update setup-r@v2 Update setup-pandoc@v2 Update checkout@v3 run one set runners pull requests. Previously, runners triggered commits branch respective pull request Fixed bug update_yml() updated wrong CI config file certain situations","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-01149000-2022-01-28","dir":"Changelog","previous_headings":"","what":"tic 0.11.4.9000 (2022-01-28)","title":"tic 0.11.4.9000 (2022-01-28)","text":"previous version.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0114-2022-01-28","dir":"Changelog","previous_headings":"","what":"tic 0.11.4 (2022-01-28)","title":"tic 0.11.4 (2022-01-28)","text":"Add compatibility rlang >= v1.0.0","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0113-2021-12-22","dir":"Changelog","previous_headings":"","what":"tic 0.11.3 (2021-12-22)","title":"tic 0.11.3 (2021-12-22)","text":"do_pkgdown(): Fix accidental deployments pull requests (#308)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0112-2021-12-05","dir":"Changelog","previous_headings":"","what":"tic 0.11.2 (2021-12-05)","title":"tic 0.11.2 (2021-12-05)","text":"do_pkgdown() now always create .nojekyll file release development deployments. Otherwise custom fonts starting underscore loaded Jekyll ignores pattern. .nojekyll file tells GitHub pages use Jekyll serving web page. (#307)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0111-2021-06-27","dir":"Changelog","previous_headings":"","what":"tic 0.11.1 (2021-06-27)","title":"tic 0.11.1 (2021-06-27)","text":"Templates: install required system libs {pkgdown} conditionally (accidentally removed previous template revision 2021-06-26) Templates: restore installation libcurl4-openssl-dev libgit2-dev","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0110-2021-06-26","dir":"Changelog","previous_headings":"","what":"tic 0.11.0 (2021-06-26)","title":"tic 0.11.0 (2021-06-26)","text":"Templates: Linux, system libraries now installed via remotes::system_requirements() (#300) Instead using exact version tag, core GHA actions now referenced using dynamic major version tag (e.g. v2 instead v2.3.4). includes update templates latest revision date 2021-06-26. do_pkgdown() macro now also builds site branches containing word cran. adds support {fledge} release mechanism using development release site (#303) update-tic.yml: Remove hardcoded reference master branch update_yaml() beta state anymore","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0100-2020-12-11","dir":"Changelog","previous_headings":"","what":"tic 0.10.0 (2020-12-11)","title":"tic 0.10.0 (2020-12-11)","text":"Drop Travis support (#295) Drop Appveyor support (#296) Bump templates: install required libgit2 required usethis v2.0.0 (tic dep)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909008-2020-11-18","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9008 (2020-11-18)","title":"tic 0.9.0.9008 (2020-11-18)","text":"update peter-evans/create-pull-request action update-tic.yml template v3.5.0","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909007-2020-11-14","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9007 (2020-11-14)","title":"tic 0.9.0.9007 (2020-11-14)","text":"update actions/checkout v2.3.4 update actions/upload-artifacts v2.2.1 update pat-s/always-upload-cache v2.1.3 conditionally install pkgdown required system libs Linux macOS","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909006-2020-09-19","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9006 (2020-09-19)","title":"tic 0.9.0.9006 (2020-09-19)","text":"Replace hardcoded references “master” dynamic query default repo branch","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909005-2020-09-04","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9005 (2020-09-04)","title":"tic 0.9.0.9005 (2020-09-04)","text":"use_tic(): use GitHub Actions default provider platforms Copy GitHub authentication SSH helpers {travis}","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909004-2020-08-27","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9004 (2020-08-27)","title":"tic 0.9.0.9004 (2020-08-27)","text":"update_yml(): Support updating multiple YAML files","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909003-2020-08-06","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9003 (2020-08-06)","title":"tic 0.9.0.9003 (2020-08-06)","text":"GHA: add workflow_dispatch event trigger templates update instructions spatial libs macOS GHA improve heuristic updating header parts “custom” “custom-deploy” templates","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909002","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9002","title":"tic 0.9.0.9002","text":"DSL: Don’t add steps twice, present previous macro (#272) update-tic.yml: use peter-evans/create-pull-request@v3 actions/checkout v2.3.1. Run ubuntu instead macOS run r-devel ubuntu instead macOS pin actions/upload-artifact v2.1.1 update actions/checkout v2.3.1 update pat-s/always-upload-cache v2.1.0 step_setup_ssh() now verifies {git2r} installed. prevents build failures {rsconnect} deployments update-tic.yml: install libs via apt Linux instead brew","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909001","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9001","title":"tic 0.9.0.9001","text":"gha_add_secret(): Add new upstream parameters fix endpoint","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0909000","dir":"Changelog","previous_headings":"","what":"tic 0.9.0.9000","title":"tic 0.9.0.9000","text":"previous version.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"features-0-9-0","dir":"Changelog","previous_headings":"","what":"Features","title":"tic 0.9.0","text":"update_yaml(): Account duplicated env vars custom env var masks template env var use_tic_badge(): Update tic badge default action name (#269) Installing using ccache faster source package installation now optional. using ccache can help lot installing large dependency chains certain packages, also adds substantial overhead builds small packages. now optional needs added custom block builds. (#264) Add step_session_info(). step prints session info installed dependencies “install” stage. (#259) step_install_deps() do_package_checks() gain dependencies = TRUE argument. New use_update_tic(): Adds GitHub Actions workflow update-tic.yml automatically update tic YAML templates Support fully custom runner matrices GitHub Actions via template types \"custom\" ´“custom-deploy”` New gha_add_secret() automate process adding GitHub PAT repo secret. function probably move {ghactions} future.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"bugfixes-0-9-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"tic 0.9.0","text":"Temporarily enforce {covr} dev version account timeouts GHA, see https://github.com/r-lib/covr/issues/435 Remove alert steps-install.R (#263) Pass arg remote printing instances. Previously using different remote “origin” caused error..","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"github-actions-0-9-0","dir":"Changelog","previous_headings":"CI Provider specific","what":"GitHub Actions","title":"tic 0.9.0","text":"Update versions “tinytex” “always-upload-cache” actions (#267) Install LaTeX one runner (#257) Switch main.yml tic.yml (#260) Set env var GITHUB_PAT secret GITHUB_TOKEN work around rate limits {remotes} Update actions/checkout v2.1.1 Update pat-s/always-upload-cache v2.0.0 Remove old clang7 compiler setup R <= 3.6.3","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809009","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9009","title":"tic 0.8.0.9009","text":"Temporarily enforce {covr} dev version account timeouts GHA, see https://github.com/r-lib/covr/issues/435 use_tic_badge(): Update tic badge default action name (#269) GHA: Update versions “tinytex” “always-upload-cache” actions (#267)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809008","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9008","title":"tic 0.8.0.9008","text":"Make ccache optional () (#264) Remove alert steps-install.R (#263)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809007","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9007","title":"tic 0.8.0.9007","text":"Add step_session_info() (#259) GHA: Install LaTeX one runner (#257) GHA: Switch main.yml tic.yml (#260)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809006","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9006","title":"tic 0.8.0.9006","text":"step_install_deps() do_package_checks() gain dependencies = TRUE argument.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809005","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9005","title":"tic 0.8.0.9005","text":"GHA: Set env var GITHUB_PAT secret GITHUB_TOKEN work around rate limits {remotes}","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809004","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9004","title":"tic 0.8.0.9004","text":"New use_update_tic(): Adds GitHub Actions workflow update-tic.yml automatically update tic YAML templates","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809003","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9003","title":"tic 0.8.0.9003","text":"Support fully custom runner matrices GitHub Actions via template types \"custom\" ´“custom-deploy”` bugfix: Pass arg remote printing instances. Previously using different remote “origin” errored.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809002","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9002","title":"tic 0.8.0.9002","text":"New gha_add_secret() automate process adding GitHub PAT repo secret. function probably move {ghactions} future.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"github-actions-0-8-0-9001","dir":"Changelog","previous_headings":"","what":"GitHub Actions","title":"tic 0.8.0.9001","text":"Update actions/checkout v2.1.1 Update pat-s/always-upload-cache v1.2.0 Remove old clang7 compiler setup R <= 3.6.3","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0809000","dir":"Changelog","previous_headings":"","what":"tic 0.8.0.9000","title":"tic 0.8.0.9000","text":"previous version.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"features-0-8-0","dir":"Changelog","previous_headings":"","what":"Features","title":"tic 0.8.0","text":"New update_yml(): Update {tic} yaml templates latest upstream version {tic}. User changes preserved marked correctly. See vignette “Updating Templates” instructions. process can also fully automated via custom CI job. Add argument force step_do_push_deploy() adding --force flag git calls Add solutions {rgl} installation issues FAQ Update .R/Makevars","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"github-actions-0-8-0","dir":"Changelog","previous_headings":"CI Provider specific","what":"GitHub Actions","title":"tic 0.8.0","text":"Set CRON time 4 avoid download issues mirror updates Added -/usr/local/include CPPFLAGS macOS runners mirror CRAN setup","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"circle-ci-0-8-0","dir":"Changelog","previous_headings":"CI Provider specific","what":"Circle CI","title":"tic 0.8.0","text":"Update r-oldrelease R 3.6.3","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0709000","dir":"Changelog","previous_headings":"","what":"tic 0.7.0.9000","title":"tic 0.7.0.9000","text":"GHA: added -/usr/local/include CPPFLAGS macOS runners mirror CRAN Add solutions installation issues package {rgl} FAQ Add argument force step_do_push_deploy() adding --force flag git calls","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"macros-0-7-0","dir":"Changelog","previous_headings":"","what":"Macros","title":"tic 0.7.0","text":"Add do_blogdown() macro (#242)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"github-actions-0-7-0","dir":"Changelog","previous_headings":"CI Provider specific","what":"GitHub Actions","title":"tic 0.7.0","text":"use_tic(): Move cli::tree() calls use_*_yml() functions avoid printing false-positive trees. use_*_yml(): Set defaults argument type. Fix GHA build URL prettify deploy message (#247) Adjust GH Actions templates use use_*_yml() logic (#246) Bugfix: Packages R-devel macOS installed parallel . R 4.0 toolchain GitHub Actions: R-devel macOS now uses Apples default clang compiler 10.13 SDK (High Sierra) mimic CRAN toolchain behavior. (10.15 SKD causes various issues installing packages source.) Env var SDKROOT now set /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk prevent linking issues macOS >= 10.15.4","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0609002","dir":"Changelog","previous_headings":"","what":"tic 0.6.0.9002","title":"tic 0.6.0.9002","text":"do_blogdown() do_bookdown() gain argument cname, making possible pass CNAME URL deployments. useful setting one sets orphan = TRUE relies custom URL published content (otherwise redirect work) Add better general intro CI explain general CI terms (fixes #234)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0609001","dir":"Changelog","previous_headings":"","what":"tic 0.6.0.9001","title":"tic 0.6.0.9001","text":"Add do_blogdown() macro (#242)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0609000","dir":"Changelog","previous_headings":"","what":"tic 0.6.0.9000","title":"tic 0.6.0.9000","text":"previous version.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"general-0-6-0","dir":"Changelog","previous_headings":"","what":"General","title":"tic 0.6.0","text":"use_badge: Refactor use default badges respective providers rather shields.io (slow sometimes badges render ) (#240) Condition deployment templates single runner deployment. avoids race conditions deployment. applies CI providers templates (blogdown, bookdown, package) (#241) Files specified deployment via step_push_deploy(commit_paths = ) now force added index git. enables add directories like docs/ (e.g. created local pkgdown build) .gitignore still deploy CI (#237).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"github-actions-0-6-0","dir":"Changelog","previous_headings":"CI Provider specific","what":"GitHub Actions","title":"tic 0.6.0","text":"GitHub Actions: Always use option ‘–-manual’ Windows LaTeX available (takes ages install) step_rcmdcheck(): Test directory “check” simplify upload artifacts Set cron job 4am avoid potential download issues R-devel macOS Github Actions: deploy R-release macOS default.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"bugfixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"tic 0.6.0","text":"use_tic() fails descriptive error message badges start/end sections missing README step_install_ssh_keys(): use git2r::config() deploying Windows prevent build freezes","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"documentation-0-6-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tic 0.6.0","text":"faq.Rmd: Add info avoid git race conditions pkgdown deployment (#238)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0509005","dir":"Changelog","previous_headings":"","what":"tic 0.5.0.9005","title":"tic 0.5.0.9005","text":"use_tic() fails descriptive error message badges start/end sections missing README","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0509004","dir":"Changelog","previous_headings":"","what":"tic 0.5.0.9004","title":"tic 0.5.0.9004","text":"faq.Rmd: Add info avoid git race conditions pkgdown deployment (#238) step_install_ssh_keys(): use git2r::config() deploying Windows prevent build freezes update blogdown templates GitHub Actions: Always use option ‘–-manual’ Windows LaTeX available","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0509003","dir":"Changelog","previous_headings":"","what":"tic 0.5.0.9003","title":"tic 0.5.0.9003","text":"Files specified deployment via step_push_deploy(commit_paths = ) now force added index git. enables add directories like docs/ (e.g. created local pkgdown build) .gitignore still deploy CI (#237). step_rcmdcheck(): Test dir “check” simplify upload artifacts","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"github-actions-0-5-0-9003","dir":"Changelog","previous_headings":"","what":"Github Actions","title":"tic 0.5.0.9003","text":"Set cron job 4am avoid potential download issues R-devel macOS Github Actions: Use actions/checkout v2 Github Actions: deploy R-release macOS default. avoids git race conditions runners.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0509002","dir":"Changelog","previous_headings":"","what":"tic 0.5.0.9002","title":"tic 0.5.0.9002","text":"Github Actions: {covr} now supports automatic upload codecov results via CODECOV_TOKEN use_tic_r(): Add support conditional tic.R templates via argument deploy_on. export use_tic_r() manual workflow possible (besides use_tic()) GitHub Actions: use actions “pat-s/always-upload-cache” instead “actions/cache”","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0509001","dir":"Changelog","previous_headings":"","what":"tic 0.5.0.9001","title":"tic 0.5.0.9001","text":"Add use_tic_badge(): Creation pretty CI status badges","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0509000","dir":"Changelog","previous_headings":"","what":"tic 0.5.0.9000","title":"tic 0.5.0.9000","text":"previous version.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"enhancements-0-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements","title":"tic 0.5.0","text":"New function tic::use_ghactions_deploy() (status “experimental”) set SSH key deployment. New function use_ghactions_yml() deploy = TRUE/FALSE (FALSE default). New Vignette “FAQ”. Added GH Actions support use_tic() new macro do_readme_rmd() (#223) new function list_macros()","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"maintenance-0-5-0","dir":"Changelog","previous_headings":"","what":"Maintenance","title":"tic 0.5.0","text":"Change default private SSH deploy key name TRAVIS_DEPLOY_KEY TIC_DEPLOY_KEY generic name. Change argument travis_private_key_name private_key_name Renamed yaml-templates.R yaml_templates.R former caused troubles previewing dev version docs. Beautified CLI output use_tic() Replaced instances _tic_ docs tic","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0409000","dir":"Changelog","previous_headings":"","what":"tic 0.4.0.9000","title":"tic 0.4.0.9000","text":"add macro do_readme_rmd() (#223) new function list_macros()","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-040","dir":"Changelog","previous_headings":"","what":"tic 0.4.0","title":"tic 0.4.0","text":"add macro do_drat() start vignette “troubleshooting” add {desc} suggests ci_can_push() never fails. templates: always upgrade dep packages {tic} installation","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0309005","dir":"Changelog","previous_headings":"","what":"tic 0.3.0.9005","title":"tic 0.3.0.9005","text":"Make possible pass endpoint arg {travis} funs use_tic() mention difference .com .org -> new vignette “org-vs-com” move package ropensci org error_on = \"note\" also fails warnings.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0309004","dir":"Changelog","previous_headings":"","what":"tic 0.3.0.9004","title":"tic 0.3.0.9004","text":"ci_can_Push(): Error descriptive error message deployment possible ci_can_push(): Fix Travis CI optimize templates (especially matrix builds) specifying job used pkgdown build","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0309003","dir":"Changelog","previous_headings":"","what":"tic 0.3.0.9003","title":"tic 0.3.0.9003","text":"use_tic(): add key_name_private key_name_public args travis::use_travis_deploy() ci_can_push(): Change default \"id_rsa\"\" \"TRAVIS_DEPLOY_KEY\" also support backward comp use_tic(): Travis default Linux macOS","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0309002","dir":"Changelog","previous_headings":"","what":"tic 0.3.0.9002","title":"tic 0.3.0.9002","text":"use_tic() supports running Linux macOS Travis (#202). Skip TicStep$prepare prepare_call given add_code_step() (#211). Fix preparation step_add_to_drat(). use_tic() gains arguments allow non-interactive use re-running settings setup fails (#203). Removed artificial sleeps interactive setup.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-0309001","dir":"Changelog","previous_headings":"","what":"tic 0.3.0.9001","title":"tic 0.3.0.9001","text":"Move use_travis_deploy() back {travis}.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-030","dir":"Changelog","previous_headings":"","what":"tic 0.3.0","title":"tic 0.3.0","text":"add argument “check_dir” step_rcmdcheck (#179) use remotes::install_cran(upgrade = TRUE) install packages (#186) added support Circle CI (#177) packages installed custom steps use binary packages possible Windows macOS (#178). Use TRAVIS_BUILD_WEB_URL commit message. do_package_checks() gains type argument. Tweak documentation. export use_travis_yml(), use_circle_yml() use_appveyor_yml() add overview table available options","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139020","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9020","title":"tic 0.2.13.9020","text":"Avoid building packages installing dependencies. Remove vignettes package checking ---build-vignettes avoid warning R CMD check. Fix R CMD build R CMD check switches AppVeyor.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139019","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9019","title":"tic 0.2.13.9019","text":"Building pkgdown site succeeds docs/ directory missing (#173, r-lib/pkgdown#1050).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139018","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9018","title":"tic 0.2.13.9018","text":"Move use_travis_deploy() travis package . Unexport get_public_key() encode_private_key().","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139017","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9017","title":"tic 0.2.13.9017","text":"Test utils printing. Exclude code can run interactively CI coverage. Add comment regarding integration test. Strip long source code lines. Add review badge. Add tic.R .Rbuildignore internal tests. Update wordlist. Fix typos. Condition example presence Git repository.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139016","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9016","title":"tic 0.2.13.9016","text":"Fix compatibility git 2.21 race conditions (#160). step_build_pkgdown() clean site building. AppVeyor template makes sure packages always installed binary bootstrapping. CI templates install GitHub version number indicates package CRAN yet. AppVeyor doesn’t cache R packages, leads update problems. Binary installation fast enough. Don’t perform CRAN incoming checks, particular checks large version components (#168). step_install_deps(), step_install_cran() step_install_github() steps install binary packages default, even CRAN version ahead. files created use_tic() added .Rbuildignore. Package template tic.R runs pkgdown Travis (#167). Update vignettes (#156).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139015","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9015","title":"tic 0.2.13.9015","text":"detect_repo_type() now prompts user unknown repository types (#161). use_tic() loses path argument, now taken usethis::proj_get() . step_rcmdcheck() do_package_checks() now avoid building vignette default AppVeyor (#150). use_tic() now uses boxes {cli} better structured output (#153).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139014","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9014","title":"tic 0.2.13.9014","text":"Configuration storage modeled usethis::proj_get(). New dsl_load(), renamed load_from_file(). New dsl_get() dsl_init(). Added examples help get_stage() macros (#77).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139013","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9013","title":"tic 0.2.13.9013","text":"Using tidy evaluation simpler code, control better printing steps (#77). Fix AppVeyor builds. README now explicit suggesting repo contain one project (#152). Documentation uses {rotemplate} package (#121). install {remotes} {curl} yet installed (#97). New use_tic(), moved {travis} (#138). Updated templates (#81). failing step displays traceback generated rlang::trace_back() (#105). do_pkgdown() do_bookdown() now deploy argument documented separate help pages. new ?macro help page provides overview. Implement print() methods DSL stages (#77). New do_bookdown() (#137).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139012","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9012","title":"tic 0.2.13.9012","text":"New repo_*() functions simplify specification repos argument installer functions (#101). Add Appveyor checks (#147, @pat-s). New pkgdown macro via do_pkgdown() (#126, @pat-s) New example: covrpage, cc @yonicd step_rcmdcheck(error_on = \"note\") works (#119). New do_package_checks() codecov = TRUE argument (#146), replaces add_package_checks() stays around compatibility (#128). add_step() now evaluates step argument tryCatch() block gives bit context fails (#73). New run_all_stages(), previously tic() (#66). New ci_get_env(), ci_has_env() ci_is_env() functions avoid verbose Sys.getenv() calls tic.R (#124, @pat-s). New ci_*() functions avoid R6 notation tic.R (#125, @pat-s).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139011","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9011","title":"tic 0.2.13.9011","text":"New step_install_deps(), reorganizing help pages installer steps page. step_rcmdcheck() longer installs dependencies. Instead, add_package_checks() includes step_install_deps() (#74). Fix two links README (#115, @Rekyt). Vignette update (#80, @pat-s). Support build_args argument step_rcmdcheck() (#64, @pat-s).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"step_rcmdcheck-0-2-13-9011","dir":"Changelog","previous_headings":"","what":"step_rcmdcheck()","title":"tic 0.2.13.9011","text":"deprecate warnings_are_errors notes_are_errors favor new error_on argument add args timeout repos call rcmdcheck() internally error_on = \"never\" can trigger message found warnings notes remote outdated doc step_rcmdcheck() using dedicated lib check","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139010","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9010","title":"tic 0.2.13.9010","text":"longer using separate library package checks, causes lot problems various steps aware (#86, #88). Packages coming R-installation updated anymore preparing step_rcmdcheck(). See ?step_rcmdcheck() detailed info. (#103)","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139009","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9009","title":"tic 0.2.13.9009","text":"step_build_pkgdown() step now uses dedicated library step_rcmdcheck(). Using development version rcmdcheck work around problems finding vignette builder (#84). Draft new “Get started” vignette (#63, @pat-s).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139008","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9008","title":"tic 0.2.13.9008","text":"step_rcmdcheck() step now uses dedicated library installing packages checking, also updates packages installing dependencies. add_package_checks() macro longer includes update.packages() call (#35). step_rcmdcheck() step now installs dependencies preparation. add_package_checks() macro longer adds code step installs dependencies.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139007","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9007","title":"tic 0.2.13.9007","text":"step_do_push_deploy() step_push_deploy() steps executed builds tag, create branch name tag (#27).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139006","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9006","title":"tic 0.2.13.9006","text":"Support creating variables tic.R sourcing tic.R modifiable environment (#33). Replaced private arguments environment keeps track internal state, now code add_package_checks() can copied tic.R file (#74).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139005","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9005","title":"tic 0.2.13.9005","text":"failing step immediately fails entire stage, subsequent steps run (#59).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139004","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9004","title":"tic 0.2.13.9004","text":"New get_public_key() encode_private_key() moved travis (#71, @pat-s). Add step_install_cran() step_install_github() (#65, @pat-s).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139003","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9003","title":"tic 0.2.13.9003","text":"Added integration tests package checks deployment, covering various common cases (#62). Add integration test deploying subdirectory. Remove orphan argument step_push_deploy(), ’s easy way implement reliably. subdirectory deployed separate branch (.e., path argument set), orphan = TRUE required.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139002","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9002","title":"tic 0.2.13.9002","text":"Better strategy handling race conditions deployment, new changes longer silently overwritten step_push_deploy() (#45). Add integration test package checks race conditions (#62). Clarify error message upon step failure. add_package_checks() adds coverage checks non-interactive CIs. Add reference use_tic() (#55). Document purpose testing steps (#49). Allow predefined stage names (#48).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139001","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9001","title":"tic 0.2.13.9001","text":"pkgdown package installed CRAN.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02139000","dir":"Changelog","previous_headings":"","what":"tic 0.2.13.9000","title":"tic 0.2.13.9000","text":"New subdir argument step_push_deploy() step_do_push_deploy(), allows restricting set files committed Git (#42).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-13-2018-02-01","dir":"Changelog","previous_headings":"","what":"tic 0.2-13 (2018-02-01)","title":"tic 0.2-13 (2018-02-01)","text":"New base64serialize() base64unserialize() (#37). add_code_step() detects required packages also complex expressions. Packages need installed GitHub still need installed manually (#36). step_rcmdcheck() now prints summary, also shows e.g. details installation failures. New prepare_call argument step_run_code() add_code_step().","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-12-2017-06-29","dir":"Changelog","previous_headings":"","what":"tic 0.2-12 (2017-06-29)","title":"tic 0.2-12 (2017-06-29)","text":"Fix add_package_checks().","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-11-2017-06-29","dir":"Changelog","previous_headings":"","what":"tic 0.2-11 (2017-06-29)","title":"tic 0.2-11 (2017-06-29)","text":"add_package_checks() gains arguments passed step_rcmdcheck(). New step_setup_ssh() (#24). New add_code_step() (#21). New tic() run steps locally (#23). New add_package_checks() (#25).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-10-2017-06-29","dir":"Changelog","previous_headings":"","what":"tic 0.2-10 (2017-06-29)","title":"tic 0.2-10 (2017-06-29)","text":"Document exported functions many classes (#8). step_add_to_drat() also update overview page exists.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-9-2017-06-28","dir":"Changelog","previous_headings":"","what":"tic 0.2-9 (2017-06-28)","title":"tic 0.2-9 (2017-06-28)","text":"Fix get_slug() AppVeyor use APPVEYOR_REPO_NAME. New step_add_to_drat(). Split step_push_deploy() step_setup_push_deploy() step_do_push_deploy(). Better traceback output. Use “remotes” instead “devtools”. Reduce output preparation (#5). New step_rcmdcheck(). deparsed code used step name (#5).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-8-2017-06-17","dir":"Changelog","previous_headings":"","what":"tic 0.2-8 (2017-06-17)","title":"tic 0.2-8 (2017-06-17)","text":"error occurring running step printed red (#5).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-7-2017-06-13","dir":"Changelog","previous_headings":"","what":"tic 0.2-7 (2017-06-13)","title":"tic 0.2-7 (2017-06-13)","text":"New step_write_text_file() creating arbitrary text files, including ~/.R/Makevars (#14). pkgdown documentation now built tags default (#13). “openssl” package now suggested, imported. Removed step_run_covr() favor new step_run_code() (#18). load_from_file() reloads file disk mtime changes (#11). steps stage run even case previous errors, stage still fails least one steps failed (#10). Adding known hosts installing SSH keys now requires non-interactive CI. New step_run_code() run arbitrary code. code call pkg::fun(), notation, pkg installed missing (#1, #3). step_run_covr() remains compatibility scheduled removal. Color start step log (#5). New step_add_to_known_hosts() work around configuration problems OS X (#16). Export runner methods stages defined Travis CI AppVeyor (#17).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-6-2017-06-04","dir":"Changelog","previous_headings":"","what":"tic 0.2-6 (2017-06-04)","title":"tic 0.2-6 (2017-06-04)","text":"Technical release sync default production branches.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-5-2016-11-27","dir":"Changelog","previous_headings":"","what":"tic 0.2-5 (2016-11-27)","title":"tic 0.2-5 (2016-11-27)","text":"Fix after_success() deploy(). Step names now printed .","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-4-2016-11-27","dir":"Changelog","previous_headings":"","what":"tic 0.2-4 (2016-11-27)","title":"tic 0.2-4 (2016-11-27)","text":"New load_from_file() replaces get_xxx_steps() task_...() renamed step_...() task now something like ad-hoc step before_script() now prepare_all_stages() TravisTask now TicStep ci() now exported environment variable CI undefined, use LocalCI sensible inference repository branch. Stop git exits nonzero status.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-3-2016-11-06","dir":"Changelog","previous_headings":"","what":"tic 0.2-3 (2016-11-06)","title":"tic 0.2-3 (2016-11-06)","text":"Install package task_build_pkgdown task.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-2-2016-11-05","dir":"Changelog","previous_headings":"","what":"tic 0.2-2 (2016-11-05)","title":"tic 0.2-2 (2016-11-05)","text":"DSL define steps via step(), tasks branch /env var filter (#6).","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-1-2016-11-05","dir":"Changelog","previous_headings":"","what":"tic 0.2-1 (2016-11-05)","title":"tic 0.2-1 (2016-11-05)","text":"Support environment variables Travis AppVeyor (#6). Add tests. Rudimentary support multiple CI systems. Clean dependencies.","code":""},{"path":"https://docs.ropensci.org/tic/dev/news/index.html","id":"tic-02-2016-11-05","dir":"Changelog","previous_headings":"","what":"tic 0.2 (2016-11-05)","title":"tic 0.2 (2016-11-05)","text":"Initial release. Rudimentary configuration based task objects. task object list/environment contains least members check(), prepare() run() – functions without arguments, check() needs return logical scalar. can subclasses new TravisTask R6 class, package now contains six subclasses: HelloWorld, RunCovr, BuildPkgdown, InstallSSHKeys, TestSSH, PushDeploy. new methods theses subclasses exported task_hello_world(), task_run_covr(), task_build_pkgdown() task_install_ssh_keys(), task_test_ssh(), task_push_deploy(), respectively. three functions before_script(), after_success() deploy() accept semicolon-separated list task objects, default taken TIC_AFTER_SUCCESS_TASKS TIC_DEPLOY_TASKS environment variables. functions call prepare() run() methods task objects check() method returns TRUE (#42).","code":""}]
