
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          Ncpus: 4

      - uses: r-lib/actions/setup-tinytex@v2
        if: matrix.config.latex == 'true'

      - uses: r-lib/actions/setup-pandoc@v2

      # set date/week for use in cache creation
      # https://github.community/t5/GitHub-Actions/How-to-set-and-access-a-Workflow-variable/m-p/42970
      # - cache R packages daily
      - name: "[Cache] Prepare daily timestamp for cache"
        if: runner.os != 'Windows'
        id: date
        run: echo "date=$(date '+%d-%m')" >> $GITHUB_OUTPUT

      - name: "[Cache] Cache R packages"
        if: runner.os != 'Windows'
        uses: pat-s/always-upload-cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-${{steps.date.outputs.date}}

      - name: "[Stage] Install pak"
        run: Rscript -e "install.packages('pak', repos = 'https://r-lib.github.io/p/pak/stable')"

      - name: "[Stage] Install"
        run: Rscript -e "if (grepl('Ubuntu', Sys.info()[['version']]) && !grepl('Under development', R.version[['status']])) {options(repos = c(CRAN = sprintf('https://packagemanager.rstudio.com/all/__linux__/%s/latest', system('lsb_release -cs', intern = TRUE))))}else{options(repos = c(CRAN = 'cloud.r-project.org'))}; pak::pkg_install('ropensci/tic')" -e "print(tic::dsl_load())" -e "tic::prepare_all_stages()" -e "tic::before_install()" -e "tic::install()"

      - name: "[Stage] Script"
        run: Rscript -e 'tic::script()'

      - name: "[Stage] After Success"
        run: Rscript -e "tic::after_success()"

      - name: "[Stage] Upload R CMD check artifacts"
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
